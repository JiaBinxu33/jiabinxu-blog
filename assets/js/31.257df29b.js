(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{356:function(v,_,t){"use strict";t.r(_);var e=t(27),a=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"函数对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数对象"}},[v._v("#")]),v._v(" 函数对象")]),v._v(" "),_("ul",[_("li",[v._v("概念：在 JavaScript 里，函数实际上是对象 , 同时也是对象的构造器")])]),v._v(" "),_("h3",{attrs:{id:"函数的种类细分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数的种类细分"}},[v._v("#")]),v._v(" 函数的种类细分")]),v._v(" "),_("ul",[_("li",[v._v("普通函数：带有函数名称")]),v._v(" "),_("li",[v._v("函数赋值给变量(常量)：函数表达式的一种")]),v._v(" "),_("li",[v._v("自执行函数：声明和调用写到一起")]),v._v(" "),_("li",[v._v("事件处理函数：给事件使用")]),v._v(" "),_("li",[v._v("构造函数：类")]),v._v(" "),_("li",[v._v("递归函数：函数调用函数自身")]),v._v(" "),_("li",[v._v("回调函数：函数做参数，传递给另外一个函数调用")]),v._v(" "),_("li",[v._v("箭头函数特点：简洁，this 不变，匿名函数，尽量不要外层使用，适合简单的函数")])]),v._v(" "),_("h3",{attrs:{id:"函数的好处及注意事项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数的好处及注意事项"}},[v._v("#")]),v._v(" 函数的好处及注意事项")]),v._v(" "),_("ul",[_("li",[v._v("好处：函数是用来帮助我们封装、重用、可扩展的最方便的工具！")]),v._v(" "),_("li",[v._v("函数注意事项：\n"),_("ul",[_("li",[v._v("函数名等于函数体")]),v._v(" "),_("li",[v._v("typeof 函数 返回 function")]),v._v(" "),_("li",[v._v("声明的函数如果不调用，函数相当于不存在。通过调用找函数")])])]),v._v(" "),_("li",[v._v("函数的参数和返回值\n"),_("ul",[_("li",[v._v("函数的参数（形参和实参）")]),v._v(" "),_("li",[v._v("函数的参数相当于函数内部的变量")]),v._v(" "),_("li",[v._v("arguments 操作函数的参数")]),v._v(" "),_("li",[v._v("return 返回值的两种功能(返回结果，终止函数)")])])]),v._v(" "),_("li",[v._v("函数内部的两个特殊的对象\n"),_("ul",[_("li",[v._v("arguments 对象：类数组，具有 length 和非负整数的索引下标")]),v._v(" "),_("li",[v._v("this：JavaScript 的关键字，存在于函数内部，随着函数调用的不同，指向会发生变化，总的指向原则，谁调用函数 this 指向谁。")])])])]),v._v(" "),_("h2",{attrs:{id:"数组对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组对象"}},[v._v("#")]),v._v(" 数组对象")]),v._v(" "),_("ul",[_("li",[v._v("概念：数组即一组任意类型或者相同类型的数据")]),v._v(" "),_("li",[v._v("数组的创建\n"),_("ul",[_("li",[v._v("构造函数创建数组对象")]),v._v(" "),_("li",[v._v("字面量创建数组对象")])])]),v._v(" "),_("li",[v._v("函数的下标和 length 属性\n"),_("ul",[_("li",[v._v("使用索引(index)下标来读取数组的值--下标是固定的，从 0 开始")]),v._v(" "),_("li",[v._v("数组的 length 属性 ，代表长度，通过设置这个属性，可以从数组的末尾移除项或向数组中添加新项")])])])]),v._v(" "),_("h3",{attrs:{id:"数组的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组的方法"}},[v._v("#")]),v._v(" 数组的方法")]),v._v(" "),_("h4",{attrs:{id:"push-可以接收任意数量的参数-把它们逐个添加到数组末尾-并返回修改后数组的长度-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#push-可以接收任意数量的参数-把它们逐个添加到数组末尾-并返回修改后数组的长度-√"}},[v._v("#")]),v._v(" push()可以接收任意数量的参数，把它们逐个添加到数组末尾，并返回修改后数组的长度 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组的长度")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2].push(3, 4)")]),v._v(" 返回 "),_("code",[v._v("4")])])]),v._v(" "),_("h4",{attrs:{id:"pop-从数组末尾移除最后一项-减少数组的-length-值-然后返回移除的项-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pop-从数组末尾移除最后一项-减少数组的-length-值-然后返回移除的项-√"}},[v._v("#")]),v._v(" pop()从数组末尾移除最后一项，减少数组的 length 值，然后返回移除的项 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值：被移除的项")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].pop()")]),v._v(" 返回 "),_("code",[v._v("3")])])]),v._v(" "),_("h4",{attrs:{id:"unshift-可以接收任意数量的参数-把它们逐个添加到数组前面-并返回修改后数组的长度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#unshift-可以接收任意数量的参数-把它们逐个添加到数组前面-并返回修改后数组的长度"}},[v._v("#")]),v._v(" unshift()可以接收任意数量的参数，把它们逐个添加到数组前面，并返回修改后数组的长度")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组的长度")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[2, 3].unshift(0, 1)")]),v._v(" 返回 "),_("code",[v._v("4")])])]),v._v(" "),_("h4",{attrs:{id:"shift-从数组前面移除一项-减少数组的-length-值-然后返回移除的项。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#shift-从数组前面移除一项-减少数组的-length-值-然后返回移除的项。"}},[v._v("#")]),v._v(" shift()从数组前面移除一项，减少数组的 length 值，然后返回移除的项。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：被移除的项")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].shift()")]),v._v(" 返回 "),_("code",[v._v("1")])])]),v._v(" "),_("h4",{attrs:{id:"reverse-方法会反转数组项的顺序。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reverse-方法会反转数组项的顺序。"}},[v._v("#")]),v._v(" reverse()方法会反转数组项的顺序。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：反转后的数组（修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].reverse()")]),v._v(" 返回 "),_("code",[v._v("[3, 2, 1]")])])]),v._v(" "),_("h4",{attrs:{id:"sort-方法按字母表升序排列数组项。-如果按其他方式而非字母表顺序进行数组排列-必须给-sort-方法传递一个比较函数做参数。√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sort-方法按字母表升序排列数组项。-如果按其他方式而非字母表顺序进行数组排列-必须给-sort-方法传递一个比较函数做参数。√"}},[v._v("#")]),v._v(" sort()方法按字母表升序排列数组项。 如果按其他方式而非字母表顺序进行数组排列，必须给 sort 方法传递一个比较函数做参数。√")]),v._v(" "),_("ul",[_("li",[v._v("返回值：排序后的数组（修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[3, 1, 2].sort()")]),v._v(" 返回 "),_("code",[v._v("[1, 2, 3]")]),v._v("；"),_("code",[v._v("[3, 1, 2].sort((a, b) => b - a)")]),v._v(" 返回 "),_("code",[v._v("[3, 2, 1]")])])]),v._v(" "),_("h4",{attrs:{id:"concat-方可以基于当前数组中的所有项创建一个新数组-参数可以是数组项或者数组。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#concat-方可以基于当前数组中的所有项创建一个新数组-参数可以是数组项或者数组。"}},[v._v("#")]),v._v(" concat()方可以基于当前数组中的所有项创建一个新数组，参数可以是数组项或者数组。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组（不修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2].concat([3, 4], 5)")]),v._v(" 返回 "),_("code",[v._v("[1, 2, 3, 4, 5]")])])]),v._v(" "),_("h4",{attrs:{id:"slice-方法基于当前数组中的一或多个项创建一个新数组。可以接受一或两个参数-起始和结束位置-不包括结束位置。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#slice-方法基于当前数组中的一或多个项创建一个新数组。可以接受一或两个参数-起始和结束位置-不包括结束位置。"}},[v._v("#")]),v._v(" slice()方法基于当前数组中的一或多个项创建一个新数组。可以接受一或两个参数，起始和结束位置，不包括结束位置。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组（不修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 4].slice(1, 3)")]),v._v(" 返回 "),_("code",[v._v("[2, 3]")])])]),v._v(" "),_("h4",{attrs:{id:"splice-方法对数组进行删除、插入、替换-是最强大的数组方法-返回值是数组-改变原数组-重要-。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#splice-方法对数组进行删除、插入、替换-是最强大的数组方法-返回值是数组-改变原数组-重要-。"}},[v._v("#")]),v._v(" splice()方法对数组进行删除、插入、替换，是最强大的数组方法，返回值是数组，改变原数组(重要)。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：被删除的项组成的数组（修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 4].splice(1, 2, 'a', 'b')")]),v._v(" 返回 "),_("code",[v._v("[2, 3]")]),v._v("，原数组变为 "),_("code",[v._v("[1, 'a', 'b', 4]")])])]),v._v(" "),_("h4",{attrs:{id:"join-方法-将数组转换成对应的字符串。参数就是连接符。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#join-方法-将数组转换成对应的字符串。参数就是连接符。"}},[v._v("#")]),v._v(" join()方法，将数组转换成对应的字符串。参数就是连接符。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].join('-')")]),v._v(" 返回 "),_("code",[v._v("'1-2-3'")])])]),v._v(" "),_("h4",{attrs:{id:"indexof-方法从数组的开头开始向后查找。√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#indexof-方法从数组的开头开始向后查找。√"}},[v._v("#")]),v._v(" indexOf() 方法从数组的开头开始向后查找。√")]),v._v(" "),_("ul",[_("li",[v._v("返回值：找到的第一个元素的索引，未找到返回 "),_("code",[v._v("-1")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 2].indexOf(2)")]),v._v(" 返回 "),_("code",[v._v("1")])])]),v._v(" "),_("h4",{attrs:{id:"lastindexof-方法则从数组的末尾开始向前查找。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof-方法则从数组的末尾开始向前查找。"}},[v._v("#")]),v._v(" lastIndexOf() 方法则从数组的末尾开始向前查找。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：找到的最后一个元素的索引，未找到返回 "),_("code",[v._v("-1")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 2].lastIndexOf(2)")]),v._v(" 返回 "),_("code",[v._v("3")])])]),v._v(" "),_("h4",{attrs:{id:"every-对数组中的每一项运行给定函数-如果该函数对每一项都返回-true-则返回-true"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#every-对数组中的每一项运行给定函数-如果该函数对每一项都返回-true-则返回-true"}},[v._v("#")]),v._v(" every()对数组中的每一项运行给定函数，如果该函数对每一项都返回 true，则返回 true")]),v._v(" "),_("ul",[_("li",[v._v("返回值：布尔值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[2, 4, 6].every(x => x % 2 === 0)")]),v._v(" 返回 "),_("code",[v._v("true")])])]),v._v(" "),_("h4",{attrs:{id:"some-对数组中的每一项运行给定函数-如果该函数对任意一项返回-true-则返回-true"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#some-对数组中的每一项运行给定函数-如果该函数对任意一项返回-true-则返回-true"}},[v._v("#")]),v._v(" some()对数组中的每一项运行给定函数，如果该函数对任意一项返回 true，则返回 true")]),v._v(" "),_("ul",[_("li",[v._v("返回值：布尔值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].some(x => x > 2)")]),v._v(" 返回 "),_("code",[v._v("true")])])]),v._v(" "),_("h4",{attrs:{id:"filter-对数组中的每一项运行给定函数-返回该函数结果为-true-的项组成的数组-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#filter-对数组中的每一项运行给定函数-返回该函数结果为-true-的项组成的数组-√"}},[v._v("#")]),v._v(" filter()对数组中的每一项运行给定函数，返回该函数结果为 true 的项组成的数组 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组（不修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 4].filter(x => x > 2)")]),v._v(" 返回 "),_("code",[v._v("[3, 4]")])])]),v._v(" "),_("h4",{attrs:{id:"map-对数组中的每一项运行给定函数-返回每次函数调用的结果组成的数组-返回就是数组-不考虑-true-或者-false√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#map-对数组中的每一项运行给定函数-返回每次函数调用的结果组成的数组-返回就是数组-不考虑-true-或者-false√"}},[v._v("#")]),v._v(" map()对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组，返回就是数组，不考虑 true 或者 false√")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组（不修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].map(x => x * 2)")]),v._v(" 返回 "),_("code",[v._v("[2, 4, 6]")])])]),v._v(" "),_("h4",{attrs:{id:"foreach-对数组中的每一项运行给定函数。这个方法没有返回值-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#foreach-对数组中的每一项运行给定函数。这个方法没有返回值-√"}},[v._v("#")]),v._v(" forEach()对数组中的每一项运行给定函数。这个方法没有返回值 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值："),_("code",[v._v("undefined")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].forEach(x => console.log(x))")]),v._v(" 依次输出 "),_("code",[v._v("1, 2, 3")])])]),v._v(" "),_("h4",{attrs:{id:"reduce-方法从数组的第一项开始-逐个遍历到最后"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reduce-方法从数组的第一项开始-逐个遍历到最后"}},[v._v("#")]),v._v(" reduce() 方法从数组的第一项开始，逐个遍历到最后")]),v._v(" "),_("ul",[_("li",[v._v("返回值：累加结果")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 4].reduce((sum, x) => sum + x, 0)")]),v._v(" 返回 "),_("code",[v._v("10")])])]),v._v(" "),_("h4",{attrs:{id:"reduceright-方法从数组的最后一项开始-向前遍历到第一项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reduceright-方法从数组的最后一项开始-向前遍历到第一项"}},[v._v("#")]),v._v(" reduceRight() 方法从数组的最后一项开始，向前遍历到第一项")]),v._v(" "),_("ul",[_("li",[v._v("返回值：累加结果")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3, 4].reduceRight((sum, x) => sum + x, 0)")]),v._v(" 返回 "),_("code",[v._v("10")])])]),v._v(" "),_("h4",{attrs:{id:"includes-查找字符串的是否存在某个字符-返回布尔值-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#includes-查找字符串的是否存在某个字符-返回布尔值-√"}},[v._v("#")]),v._v(" includes():查找字符串的是否存在某个字符，返回布尔值 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值：布尔值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, 2, 3].includes(2)")]),v._v(" 返回 "),_("code",[v._v("true")])])]),v._v(" "),_("h4",{attrs:{id:"flat-方法-将多维数组扁平化为一维数组-参数是扁平的数组维度-可以设为-infinity√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flat-方法-将多维数组扁平化为一维数组-参数是扁平的数组维度-可以设为-infinity√"}},[v._v("#")]),v._v(" flat()方法，将多维数组扁平化为一维数组，参数是扁平的数组维度，可以设为 Infinity√")]),v._v(" "),_("ul",[_("li",[v._v("返回值：扁平化后的新数组（不修改原数组）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("[1, [2, [3, 4]]].flat(2)")]),v._v(" 返回 "),_("code",[v._v("[1, 2, 3, 4]")])])]),v._v(" "),_("h4",{attrs:{id:"array-from-将对象转换成数组-数字做-key-值-具有-length-属性-将类数组转真正的数组-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#array-from-将对象转换成数组-数字做-key-值-具有-length-属性-将类数组转真正的数组-√"}},[v._v("#")]),v._v(" Array.from():将对象转换成数组(数字做 key 值，具有 length 属性)，将类数组转真正的数组 √")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Array.from('hello')")]),v._v(" 返回 "),_("code",[v._v("['h', 'e', 'l', 'l', 'o']")]),v._v("；"),_("code",[v._v("Array.from({0: 'a', 1: 'b', length: 2})")]),v._v(" 返回 "),_("code",[v._v("['a', 'b']")])])]),v._v(" "),_("h4",{attrs:{id:"array-isarray-确定括号中的某个值到底是不是数组-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#array-isarray-确定括号中的某个值到底是不是数组-√"}},[v._v("#")]),v._v(" Array.isArray():确定括号中的某个值到底是不是数组 √")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("返回值：布尔值")])]),v._v(" "),_("li",[_("p",[v._v("示例："),_("code",[v._v("Array.isArray([1, 2])")]),v._v(" 返回 "),_("code",[v._v("true")]),v._v("；"),_("code",[v._v("Array.isArray('hello')")]),v._v(" 返回 "),_("code",[v._v("false")])])]),v._v(" "),_("li",[_("p",[v._v("值传递和引用传递")]),v._v(" "),_("ul",[_("li",[v._v("基本类型遵循值传递，引用类型遵循引用传递（地址传递）")]),v._v(" "),_("li",[v._v("解决方式拷贝传值")])])])]),v._v(" "),_("h2",{attrs:{id:"对象-自定义对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象-自定义对象"}},[v._v("#")]),v._v(" 对象(自定义对象)")]),v._v(" "),_("ul",[_("li",[v._v("概念：一切皆对象，对象是属性的无序集合(属性值是函数，变成方法),可通过名字访问这些值.")]),v._v(" "),_("li",[v._v("自定义对象的创建\n"),_("ul",[_("li",[v._v("构造函数创建对象")]),v._v(" "),_("li",[v._v("字面量创建对象")])])])]),v._v(" "),_("h3",{attrs:{id:"对象的特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象的特点"}},[v._v("#")]),v._v(" 对象的特点")]),v._v(" "),_("ul",[_("li",[v._v("对象的属性名一定是字符串。")]),v._v(" "),_("li",[v._v("读写对象的属性值可以使用点和中括号,区别是点后面跟字符串，中括号里面可以是变量和字符串。")]),v._v(" "),_("li",[v._v("对象的属性值可以被覆盖的")]),v._v(" "),_("li",[v._v("对象的值是固定的，返回[object Object]")])]),v._v(" "),_("h3",{attrs:{id:"对象的遍历"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象的遍历"}},[v._v("#")]),v._v(" 对象的遍历")]),v._v(" "),_("ul",[_("li",[v._v("因为对象是无序的，必须采用 for...in...遍历")])]),v._v(" "),_("h3",{attrs:{id:"对象的静态方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象的静态方法"}},[v._v("#")]),v._v(" 对象的静态方法")]),v._v(" "),_("h4",{attrs:{id:"object-keys-obj"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#object-keys-obj"}},[v._v("#")]),v._v(" Object.keys(obj)")]),v._v(" "),_("ul",[_("li",[v._v("返回值：包含对象所有属性名的数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Object.keys({name: 'Tom', age: 20})")]),v._v(" 返回 "),_("code",[v._v("['name', 'age']")])])]),v._v(" "),_("h4",{attrs:{id:"object-values-obj"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#object-values-obj"}},[v._v("#")]),v._v(" Object.values(obj)")]),v._v(" "),_("ul",[_("li",[v._v("返回值：包含对象所有属性值的数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Object.values({name: 'Tom', age: 20})")]),v._v(" 返回 "),_("code",[v._v("['Tom', 20]")])])]),v._v(" "),_("h4",{attrs:{id:"object-entries"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#object-entries"}},[v._v("#")]),v._v(" Object.entries")]),v._v(" "),_("ul",[_("li",[v._v("返回值：包含对象所有 [键, 值] 对的二维数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Object.entries({name: 'Tom', age: 20})")]),v._v(" 返回 "),_("code",[v._v("[['name', 'Tom'], ['age', 20]]")])])]),v._v(" "),_("h2",{attrs:{id:"字符串对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串对象"}},[v._v("#")]),v._v(" 字符串对象")]),v._v(" "),_("h3",{attrs:{id:"包装对象的概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#包装对象的概念"}},[v._v("#")]),v._v(" 包装对象的概念")]),v._v(" "),_("ul",[_("li",[v._v("当要操作字符串、数字、布尔值的属性时，js 会在内存中自动创建一个对象，用来对内置类 型进行包装，使内置类型暂时拥有普通对象功能，可以存取属性，一旦引用结束，包装对象自动销毁。")])]),v._v(" "),_("h3",{attrs:{id:"类数组的概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类数组的概念"}},[v._v("#")]),v._v(" 类数组的概念")]),v._v(" "),_("ul",[_("li",[v._v("也叫伪数组，在 js 中有一些对象它也拥有 length 属性，且拥有为非负整数的属性(索引)，但是它又不能调用数组的方法，这种对象被称为类数组对象")])]),v._v(" "),_("h3",{attrs:{id:"字符串的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串的方法"}},[v._v("#")]),v._v(" 字符串的方法")]),v._v(" "),_("h4",{attrs:{id:"substring-截取字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#substring-截取字符串"}},[v._v("#")]),v._v(" substring():截取字符串")]),v._v(" "),_("ul",[_("li",[v._v("返回值：截取后的字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.substring(1, 4)")]),v._v(" 返回 "),_("code",[v._v("'ell'")])])]),v._v(" "),_("h4",{attrs:{id:"split-将字符串转换成数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#split-将字符串转换成数组"}},[v._v("#")]),v._v(" split():将字符串转换成数组")]),v._v(" "),_("ul",[_("li",[v._v("返回值：字符串分割后的数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'a-b-c'.split('-')")]),v._v(" 返回 "),_("code",[v._v("['a', 'b', 'c']")])])]),v._v(" "),_("h4",{attrs:{id:"touppercase-将字符串转换大写字母"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#touppercase-将字符串转换大写字母"}},[v._v("#")]),v._v(" toUpperCase():将字符串转换大写字母")]),v._v(" "),_("ul",[_("li",[v._v("返回值：大写字母组成的新字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.toUpperCase()")]),v._v(" 返回 "),_("code",[v._v("'HELLO'")])])]),v._v(" "),_("h4",{attrs:{id:"tolowercase-将字符串转换小写字母"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tolowercase-将字符串转换小写字母"}},[v._v("#")]),v._v(" toLowerCase():将字符串转换小写字母")]),v._v(" "),_("ul",[_("li",[v._v("返回值：小写字母组成的新字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'HELLO'.toLowerCase()")]),v._v(" 返回 "),_("code",[v._v("'hello'")])])]),v._v(" "),_("h4",{attrs:{id:"trim-去掉字符串首尾的空格"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#trim-去掉字符串首尾的空格"}},[v._v("#")]),v._v(" trim():去掉字符串首尾的空格")]),v._v(" "),_("ul",[_("li",[v._v("返回值：去掉首尾空格的新字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("' hello '.trim()")]),v._v(" 返回 "),_("code",[v._v("'hello'")])])]),v._v(" "),_("h4",{attrs:{id:"indexof-lastindexof-查找字符串的索引位置-没有找到返回-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof-查找字符串的索引位置-没有找到返回-1"}},[v._v("#")]),v._v(" indexOf()/lastIndexOf():查找字符串的索引位置，没有找到返回-1")]),v._v(" "),_("ul",[_("li",[v._v("返回值：找到的字符位置（整数）或 "),_("code",[v._v("-1")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.indexOf('l')")]),v._v(" 返回 "),_("code",[v._v("2")]),v._v("；"),_("code",[v._v("'hello'.lastIndexOf('l')")]),v._v(" 返回 "),_("code",[v._v("3")])])]),v._v(" "),_("h4",{attrs:{id:"includes-查找字符串的是否存在某个字符-返回布尔值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#includes-查找字符串的是否存在某个字符-返回布尔值"}},[v._v("#")]),v._v(" includes():查找字符串的是否存在某个字符，返回布尔值")]),v._v(" "),_("ul",[_("li",[v._v("返回值：布尔值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.includes('el')")]),v._v(" 返回 "),_("code",[v._v("true")])])]),v._v(" "),_("h4",{attrs:{id:"charat-通过索引位置返回对应的字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#charat-通过索引位置返回对应的字符"}},[v._v("#")]),v._v(" charAt():通过索引位置返回对应的字符")]),v._v(" "),_("ul",[_("li",[v._v("返回值：字符（字符串）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.charAt(1)")]),v._v(" 返回 "),_("code",[v._v("'e'")])])]),v._v(" "),_("h4",{attrs:{id:"charcodeat-通过索引位置返回对应字符的-unicode-编码的值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#charcodeat-通过索引位置返回对应字符的-unicode-编码的值"}},[v._v("#")]),v._v(" charCodeAt():通过索引位置返回对应字符的 unicode 编码的值")]),v._v(" "),_("ul",[_("li",[v._v("返回值：Unicode 编码值（整数）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.charCodeAt(0)")]),v._v(" 返回 "),_("code",[v._v("104")])])]),v._v(" "),_("h4",{attrs:{id:"string-fromcharcode-通过-unicode-编码返回对应的字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#string-fromcharcode-通过-unicode-编码返回对应的字符"}},[v._v("#")]),v._v(" String.fromCharCode():通过 unicode 编码返回对应的字符")]),v._v(" "),_("ul",[_("li",[v._v("返回值：对应的字符")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("String.fromCharCode(104, 101, 108, 108, 111)")]),v._v(" 返回 "),_("code",[v._v("'hello'")])])]),v._v(" "),_("h4",{attrs:{id:"substr-截取字符串-第二个参数表示截取的长度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#substr-截取字符串-第二个参数表示截取的长度"}},[v._v("#")]),v._v(" substr():截取字符串，第二个参数表示截取的长度")]),v._v(" "),_("ul",[_("li",[v._v("返回值：截取后的字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.substr(1, 3)")]),v._v(" 返回 "),_("code",[v._v("'ell'")])])]),v._v(" "),_("h4",{attrs:{id:"slice-截取字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#slice-截取字符串"}},[v._v("#")]),v._v(" slice():截取字符串")]),v._v(" "),_("ul",[_("li",[v._v("返回值：截取后的字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.slice(1, 4)")]),v._v(" 返回 "),_("code",[v._v("'ell'")])])]),v._v(" "),_("h4",{attrs:{id:"concat-根据当前的字符串生成新的字符串-参数可以是字符串或者变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#concat-根据当前的字符串生成新的字符串-参数可以是字符串或者变量"}},[v._v("#")]),v._v(" concat():根据当前的字符串生成新的字符串，参数可以是字符串或者变量")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.concat(' ', 'world')")]),v._v(" 返回 "),_("code",[v._v("'hello world'")])])]),v._v(" "),_("h4",{attrs:{id:"replace-替换字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#replace-替换字符串"}},[v._v("#")]),v._v(" replace():替换字符串")]),v._v(" "),_("ul",[_("li",[v._v("返回值：替换后的新字符串")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.replace('l', 'L')")]),v._v(" 返回 "),_("code",[v._v("'heLlo'")]),v._v("（只替换第一个）")])]),v._v(" "),_("h4",{attrs:{id:"match-查找匹配到的字符串-放入数组返回"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#match-查找匹配到的字符串-放入数组返回"}},[v._v("#")]),v._v(" match():查找匹配到的字符串，放入数组返回")]),v._v(" "),_("ul",[_("li",[v._v("返回值：匹配结果的数组或 "),_("code",[v._v("null")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello123'.match(/\\d+/)")]),v._v(" 返回 "),_("code",[v._v("['123']")])])]),v._v(" "),_("h4",{attrs:{id:"search-查找第一个出现的字符的位置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#search-查找第一个出现的字符的位置"}},[v._v("#")]),v._v(" search():查找第一个出现的字符的位置")]),v._v(" "),_("ul",[_("li",[v._v("返回值：字符位置或 "),_("code",[v._v("-1")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.search('l')")]),v._v(" 返回 "),_("code",[v._v("2")])])]),v._v(" "),_("h3",{attrs:{id:"数组和字符串共有的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组和字符串共有的方法"}},[v._v("#")]),v._v(" 数组和字符串共有的方法")]),v._v(" "),_("h4",{attrs:{id:"indexof-lastindexof-查找字符串的索引位置-没有找到返回-1-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof-查找字符串的索引位置-没有找到返回-1-2"}},[v._v("#")]),v._v(" indexOf()/lastIndexOf():查找字符串的索引位置，没有找到返回-1")]),v._v(" "),_("ul",[_("li",[v._v("返回值：找到的位置（整数）或 "),_("code",[v._v("-1")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.indexOf('l')")]),v._v(" 返回 "),_("code",[v._v("2")]),v._v("；"),_("code",[v._v("[1, 2, 3].indexOf(2)")]),v._v(" 返回 "),_("code",[v._v("1")])])]),v._v(" "),_("h4",{attrs:{id:"slice-截取字符串-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#slice-截取字符串-2"}},[v._v("#")]),v._v(" slice():截取字符串")]),v._v(" "),_("ul",[_("li",[v._v("返回值：截取后的字符串或数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.slice(1, 4)")]),v._v(" 返回 "),_("code",[v._v("'ell'")]),v._v("；"),_("code",[v._v("[1, 2, 3, 4].slice(1, 3)")]),v._v(" 返回 "),_("code",[v._v("[2, 3]")])])]),v._v(" "),_("h4",{attrs:{id:"concat-根据当前的字符串生成新的字符串-参数可以是字符串或者变量-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#concat-根据当前的字符串生成新的字符串-参数可以是字符串或者变量-2"}},[v._v("#")]),v._v(" concat():根据当前的字符串生成新的字符串，参数可以是字符串或者变量")]),v._v(" "),_("ul",[_("li",[v._v("返回值：新字符串或新数组")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.concat(' ', 'world')")]),v._v(" 返回 "),_("code",[v._v("'hello world'")]),v._v("；"),_("code",[v._v("[1, 2].concat([3, 4])")]),v._v(" 返回 "),_("code",[v._v("[1, 2, 3, 4]")])])]),v._v(" "),_("h4",{attrs:{id:"includes-查找字符串的是否存在某个字符-返回布尔值-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#includes-查找字符串的是否存在某个字符-返回布尔值-2"}},[v._v("#")]),v._v(" includes():查找字符串的是否存在某个字符，返回布尔值")]),v._v(" "),_("ul",[_("li",[v._v("返回值：布尔值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("'hello'.includes('el')")]),v._v(" 返回 "),_("code",[v._v("true")]),v._v("；"),_("code",[v._v("[1, 2, 3].includes(2)")]),v._v(" 返回 "),_("code",[v._v("true")])])]),v._v(" "),_("h2",{attrs:{id:"数学对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数学对象"}},[v._v("#")]),v._v(" 数学对象")]),v._v(" "),_("ul",[_("li",[v._v('数学对象的概念：单体内置对象( Global 和 Math),由 ECMAScript 实现提供的、不依赖于宿主环境的对象，这些对象在 ECMAScript 程序执行之前就已经存在了。"意思就是说，开发人员不必显式地实例化内置对象，因为它们已经实例化了。')])]),v._v(" "),_("h3",{attrs:{id:"数学的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数学的方法"}},[v._v("#")]),v._v(" 数学的方法")]),v._v(" "),_("h4",{attrs:{id:"math-round-将括号里面的数字采用四舍五入形式取整。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-round-将括号里面的数字采用四舍五入形式取整。"}},[v._v("#")]),v._v(" Math.round() ：将括号里面的数字采用四舍五入形式取整。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：取整后的整数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.round(4.5)")]),v._v(" 返回 "),_("code",[v._v("5")]),v._v("；"),_("code",[v._v("Math.round(4.4)")]),v._v(" 返回 "),_("code",[v._v("4")])])]),v._v(" "),_("h4",{attrs:{id:"math-abs-求绝对值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-abs-求绝对值"}},[v._v("#")]),v._v(" Math.abs()：求绝对值")]),v._v(" "),_("ul",[_("li",[v._v("返回值：绝对值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.abs(-5)")]),v._v(" 返回 "),_("code",[v._v("5")])])]),v._v(" "),_("h4",{attrs:{id:"math-ceil-将括号里面的小数采用向上取整"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-ceil-将括号里面的小数采用向上取整"}},[v._v("#")]),v._v(" Math.ceil()：将括号里面的小数采用向上取整")]),v._v(" "),_("ul",[_("li",[v._v("返回值：向上取整后的整数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.ceil(4.1)")]),v._v(" 返回 "),_("code",[v._v("5")])])]),v._v(" "),_("h4",{attrs:{id:"math-floor-将括号里面的小数采用向下取整"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-floor-将括号里面的小数采用向下取整"}},[v._v("#")]),v._v(" Math.floor()：将括号里面的小数采用向下取整")]),v._v(" "),_("ul",[_("li",[v._v("返回值：向下取整后的整数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.floor(4.9)")]),v._v(" 返回 "),_("code",[v._v("4")])])]),v._v(" "),_("h4",{attrs:{id:"math-pow-求幂-第一个参数是底数-第二个参数是指数。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-pow-求幂-第一个参数是底数-第二个参数是指数。"}},[v._v("#")]),v._v(" Math.pow()：求幂，第一个参数是底数，第二个参数是指数。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：幂运算结果")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.pow(2, 3)")]),v._v(" 返回 "),_("code",[v._v("8")])])]),v._v(" "),_("h4",{attrs:{id:"math-max-求括号里面数字的最大值-数字之间逗号隔开。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-max-求括号里面数字的最大值-数字之间逗号隔开。"}},[v._v("#")]),v._v(" Math.max()：求括号里面数字的最大值，数字之间逗号隔开。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：最大值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.max(3, 1, 4, 1, 5)")]),v._v(" 返回 "),_("code",[v._v("5")])])]),v._v(" "),_("h4",{attrs:{id:"math-min-求括号里面数字的最小值-数字之间逗号隔开。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-min-求括号里面数字的最小值-数字之间逗号隔开。"}},[v._v("#")]),v._v(" Math.min()：求括号里面数字的最小值，数字之间逗号隔开。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：最小值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.min(3, 1, 4, 1, 5)")]),v._v(" 返回 "),_("code",[v._v("1")])])]),v._v(" "),_("h4",{attrs:{id:"math-sqrt-开根号。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-sqrt-开根号。"}},[v._v("#")]),v._v(" Math.sqrt()：开根号。")]),v._v(" "),_("ul",[_("li",[v._v("返回值：平方根结果")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.sqrt(16)")]),v._v(" 返回 "),_("code",[v._v("4")])])]),v._v(" "),_("h4",{attrs:{id:"math-random-随机数-0-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-random-随机数-0-1"}},[v._v("#")]),v._v(" Math.random()：随机数 -- [0,1)")]),v._v(" "),_("ul",[_("li",[v._v("返回值：0 到 1 之间的随机小数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.random()")]),v._v(" 可能返回 "),_("code",[v._v("0.7231234567")])])]),v._v(" "),_("h4",{attrs:{id:"math-pi-表示-π-3-14"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#math-pi-表示-π-3-14"}},[v._v("#")]),v._v(" Math.PI：表示 π(3.14)")]),v._v(" "),_("ul",[_("li",[v._v("返回值：π 的值")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Math.PI")]),v._v(" 返回 "),_("code",[v._v("3.141592653589793")])])]),v._v(" "),_("h2",{attrs:{id:"日期对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期对象"}},[v._v("#")]),v._v(" 日期对象")]),v._v(" "),_("ul",[_("li",[v._v("日期对象的概念：ECMAScript 中的 Date 类型是在早期 Java 中的类基础上构建的。Date 类型使用自 UTC（国际协调时间）1970 年 1 月 1 日午夜零时开始经过的毫秒数来保存日期。")])]),v._v(" "),_("h3",{attrs:{id:"日期对象的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期对象的方法"}},[v._v("#")]),v._v(" 日期对象的方法")]),v._v(" "),_("h4",{attrs:{id:"gettime-返回表示日期的毫秒数-与-valueof-方法返回的值相同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#gettime-返回表示日期的毫秒数-与-valueof-方法返回的值相同"}},[v._v("#")]),v._v(" getTime()返回表示日期的毫秒数；与 valueOf() 方法返回的值相同")]),v._v(" "),_("ul",[_("li",[v._v("返回值：毫秒数（整数）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01').getTime()")]),v._v(" 返回 "),_("code",[v._v("1672531200000")])])]),v._v(" "),_("h4",{attrs:{id:"getfullyear-取得-4-位数的年份-如-2007-而非仅-07"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getfullyear-取得-4-位数的年份-如-2007-而非仅-07"}},[v._v("#")]),v._v(" getFullYear()取得 4 位数的年份（如 2007 而非仅 07）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：年份（四位数）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01').getFullYear()")]),v._v(" 返回 "),_("code",[v._v("2023")])])]),v._v(" "),_("h4",{attrs:{id:"setfullyear-设置日期的年份。传入的年份值必须是-4-位数字-如-2007-而非仅-07"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setfullyear-设置日期的年份。传入的年份值必须是-4-位数字-如-2007-而非仅-07"}},[v._v("#")]),v._v(" setFullYear()设置日期的年份。传入的年份值必须是 4 位数字（如 2007 而非仅 07）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setFullYear(2024);")]),v._v(" 将年份设置为 "),_("code",[v._v("2024")])])]),v._v(" "),_("h4",{attrs:{id:"getmonth-返回日期中的月份-其中-0-表示一月-11-表示十二月"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getmonth-返回日期中的月份-其中-0-表示一月-11-表示十二月"}},[v._v("#")]),v._v(" getMonth()返回日期中的月份，其中 0 表示一月，11 表示十二月")]),v._v(" "),_("ul",[_("li",[v._v("返回值：月份（0-11）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-03-15').getMonth()")]),v._v(" 返回 "),_("code",[v._v("2")])])]),v._v(" "),_("h4",{attrs:{id:"setmonth-设置日期的月份。传入的月份值必须大于-0-超过-11-则增加年份"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setmonth-设置日期的月份。传入的月份值必须大于-0-超过-11-则增加年份"}},[v._v("#")]),v._v(" setMonth()设置日期的月份。传入的月份值必须大于 0，超过 11 则增加年份")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setMonth(11);")]),v._v(" 将月份设置为十二月")])]),v._v(" "),_("h4",{attrs:{id:"getdate-返回日期月份中的天数-1-到-31"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getdate-返回日期月份中的天数-1-到-31"}},[v._v("#")]),v._v(" getDate()返回日期月份中的天数（1 到 31）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：天数（1-31）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-03-15').getDate()")]),v._v(" 返回 "),_("code",[v._v("15")])])]),v._v(" "),_("h4",{attrs:{id:"setdate-设置日期月份中的天数。如果传入的值超过了该月中应有的天数-则增加月份"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setdate-设置日期月份中的天数。如果传入的值超过了该月中应有的天数-则增加月份"}},[v._v("#")]),v._v(" setDate()设置日期月份中的天数。如果传入的值超过了该月中应有的天数，则增加月份")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setDate(20);")]),v._v(" 将天数设置为 "),_("code",[v._v("20")])])]),v._v(" "),_("h4",{attrs:{id:"getday-返回日期中星期的星期几-其中-0-表示星期日-6-表示星期六"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getday-返回日期中星期的星期几-其中-0-表示星期日-6-表示星期六"}},[v._v("#")]),v._v(" getDay()返回日期中星期的星期几（其中 0 表示星期日，6 表示星期六）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：星期几（0-6）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01').getDay()")]),v._v(" 返回 "),_("code",[v._v("0")]),v._v("（星期日）")])]),v._v(" "),_("h4",{attrs:{id:"gethours-返回日期中的小时数-0-到-23"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#gethours-返回日期中的小时数-0-到-23"}},[v._v("#")]),v._v(" getHours()返回日期中的小时数（0 到 23）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：小时数（0-23）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01 14:30:00').getHours()")]),v._v(" 返回 "),_("code",[v._v("14")])])]),v._v(" "),_("h4",{attrs:{id:"sethours-设置日期中的小时数。传入的值超过了-23-则增加月份中的天数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sethours-设置日期中的小时数。传入的值超过了-23-则增加月份中的天数"}},[v._v("#")]),v._v(" setHours()设置日期中的小时数。传入的值超过了 23 则增加月份中的天数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setHours(18);")]),v._v(" 将小时设置为 "),_("code",[v._v("18")])])]),v._v(" "),_("h4",{attrs:{id:"getminutes-返回日期中的分钟数-0-到-59"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getminutes-返回日期中的分钟数-0-到-59"}},[v._v("#")]),v._v(" getMinutes()返回日期中的分钟数（0 到 59）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：分钟数（0-59）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01 14:30:00').getMinutes()")]),v._v(" 返回 "),_("code",[v._v("30")])])]),v._v(" "),_("h4",{attrs:{id:"setminutes-设置日期中的分钟数。传入的值超过-59-则增加小时数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setminutes-设置日期中的分钟数。传入的值超过-59-则增加小时数"}},[v._v("#")]),v._v(" setMinutes()设置日期中的分钟数。传入的值超过 59 则增加小时数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setMinutes(45);")]),v._v(" 将分钟设置为 "),_("code",[v._v("45")])])]),v._v(" "),_("h4",{attrs:{id:"getseconds-返回日期中的秒数-0-到-59"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getseconds-返回日期中的秒数-0-到-59"}},[v._v("#")]),v._v(" getSeconds()返回日期中的秒数（0 到 59）")]),v._v(" "),_("ul",[_("li",[v._v("返回值：秒数（0-59）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01 14:30:45').getSeconds()")]),v._v(" 返回 "),_("code",[v._v("45")])])]),v._v(" "),_("h4",{attrs:{id:"setseconds-设置日期中的秒数。传入的值超过了-59-会增加分钟数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setseconds-设置日期中的秒数。传入的值超过了-59-会增加分钟数"}},[v._v("#")]),v._v(" setSeconds()设置日期中的秒数。传入的值超过了 59 会增加分钟数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setSeconds(30);")]),v._v(" 将秒数设置为 "),_("code",[v._v("30")])])]),v._v(" "),_("h4",{attrs:{id:"getmilliseconds-返回日期中的毫秒数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#getmilliseconds-返回日期中的毫秒数"}},[v._v("#")]),v._v(" getMilliseconds()返回日期中的毫秒数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：毫秒数（0-999）")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("new Date('2023-01-01 14:30:45.500').getMilliseconds()")]),v._v(" 返回 "),_("code",[v._v("500")])])]),v._v(" "),_("h4",{attrs:{id:"setmilliseconds-设置日期中的毫秒数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#setmilliseconds-设置日期中的毫秒数"}},[v._v("#")]),v._v(" setMilliseconds() 设置日期中的毫秒数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：设置后的毫秒数")]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("let d = new Date(); d.setMilliseconds(999);")]),v._v(" 将毫秒数设置为 "),_("code",[v._v("999")])])]),v._v(" "),_("h4",{attrs:{id:"date-parse-方法接收一个表示日期的字符串参数-然后尝试根据这个字符串返回相应日期的毫秒数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#date-parse-方法接收一个表示日期的字符串参数-然后尝试根据这个字符串返回相应日期的毫秒数"}},[v._v("#")]),v._v(" Date.parse() 方法接收一个表示日期的字符串参数，然后尝试根据这个字符串返回相应日期的毫秒数")]),v._v(" "),_("ul",[_("li",[v._v("返回值：解析后的毫秒数，解析失败返回 "),_("code",[v._v("NaN")])]),v._v(" "),_("li",[v._v("示例："),_("code",[v._v("Date.parse('2023-01-01')")]),v._v(" 返回 "),_("code",[v._v("1672531200000")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);