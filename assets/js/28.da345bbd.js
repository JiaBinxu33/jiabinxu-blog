(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{350:function(t,a,s){"use strict";s.r(a);var n=s(27),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"html-css-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-css-概述"}},[t._v("#")]),t._v(" HTML+Css 概述")]),t._v(" "),a("p",[t._v("HTML 是一门超文本标记语言而不是编程语言，其包括诸多标签可以用于构建基本的网页，而浏览器可以通过其内核去解析这些标签，将其界面正确的展示出来；\nHTML 的标签是由尖括号包围的关键词;\nHTML 的标签一般是成对出现的，如 div 标签,类似这种的称为双标签；当然也有单标签，如 br 换行标签；")]),t._v(" "),a("div",{staticClass:"language-Html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("标签的关系有包含关系和并列关系,如下所示：")]),t._v(" "),a("ul",[a("li",[t._v("包含关系：html 标签里包含着 head 标签，因此可以称为是包含关系（父子关系）")]),t._v(" "),a("li",[t._v("并列关系：head 标签和 body 标签不存在包含关系，而是并列在一起的，因此称为并列关系（兄弟关系）")])]),t._v(" "),a("div",{staticClass:"language-Html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"块元素-行内元素-行内块元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块元素-行内元素-行内块元素"}},[t._v("#")]),t._v(" 块元素，行内元素，行内块元素")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("块元素（div、p、hr、h1-h6、header、footer、ul>li 、 dl dt dd）：可设宽高，padding，border，margin，line-height。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("块级元素以块的形式显示在页面上，它们会独占一行或多行空间，并且默认情况下会在前后创建换行。块级元素可以设置宽度、高度、内外边距等样式属性。")])]),t._v(" "),a("li",[a("p",[t._v("注意：块级元素的宽度默认是自动撑开到容器的宽度，而不是默认为 100%\n可以容纳内联元素和其他块元素。\n默认情况下会在前后创建换行。\n可以设置宽度、高度、内外边距等样式属性。")])])])]),t._v(" "),a("li",[a("p",[t._v("行内元素（span 、i、b-strong、u、s、a）： 不可设置宽高、可设置水平方向的 padding，border，margin，垂直方向不行，多个行内在同一行显示，里面一般仅放文本，但 a 标签除外。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("行内元素\n行内元素不会独占一行，它们会在同一行内显示，并且大小由内容决定，无法设置宽度和高度，其宽度随着内容增加，高度随字体大小而改变。通常情况下，行内元素不能设置上下内外边距，只能设置左右内外边距。")])]),t._v(" "),a("li",[a("p",[t._v("特点\n多个行内在同一行内显示，里面一般仅放文本，但 a 标签除外。相邻的行内元素会排列在同一行里，直到一行排不下，才会换行。行内元素的宽度由其中包含的内容决定，内容越多，宽度越大，可以随内容自动扩展，不需要设置宽度属性。\n行内元素只能容纳文本或者其他行内元素。\n由于行内元素是在同一行内显示的，所以通常只能设置左右内外边距，上下内外边距在默认情况下是不起作用的。\n示例行内元素")])])])]),t._v(" "),a("li",[a("p",[t._v("行内块元素（input、button、select、img）：可设置宽高，padding，border，margin，line-height，多个行内块在一行显示。行内块级元素")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("行内块级元素在同一行内显示，但是它们可以设置宽度和高度，并且可以像块级元素一样设置内外边距。它们不会强制换行，可以在一行内显示多个行内块级元素。")])]),t._v(" "),a("li",[a("p",[t._v("特点\n在同一行内显示。\n可以设置宽度和高度。\n可以设置内外边距。\n不会强制换行。\n示例行内块级元素")])])])]),t._v(" "),a("li",[a("p",[t._v("如何转换，通过 display 设置：display: block | inline-block | line")])]),t._v(" "),a("li",[a("p",[t._v("区别")]),t._v(" "),a("ul",[a("li",[t._v("显示方式：块级元素和行内块级元素会独占一行或多行空间，而行内元素会在同一行内显示。")]),t._v(" "),a("li",[t._v("尺寸设置：块级元素和行内块级元素可以设置宽度和高度，而行内元素的尺寸由其内容决定。")]),t._v(" "),a("li",[t._v("内外边距：块级元素和行内块级元素可以设置上下内外边距，而行内元素通常只能设置左右内外边距。")]),t._v(" "),a("li",[t._v("换行行为：块级元素和行内块级元素会在其前后创建换行，而行内元素不会。")])])])]),t._v(" "),a("p",[t._v("通过深入理解这三种元素类型的特性、区别以及转换方法，我们能够更有效地管理页面的结构和外观，从而实现更具丰富性和灵活性的网页设计。")]),t._v(" "),a("h2",{attrs:{id:"渲染帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染帧"}},[t._v("#")]),t._v(" 渲染帧")]),t._v(" "),a("p",[t._v("由于现在广泛使用的屏幕都有固定的刷新率（比如最新的一般在 60Hz）， 在两次硬件刷新之间浏览器进行两次重绘是没有意义的只会消耗性能。 浏览器会利用这个间隔 16ms（1000ms/60）适当地对绘制进行节流， 因此 16ms 就成为页面渲染优化的一个关键时间。 尤其在异步渲染中，要利用 流式渲染 就必须考虑到这个渲染帧间隔。")]),t._v(" "),a("p",[t._v("为方便查阅源码和相关资料，本文以 Chromium 的 Blink 引擎为例分析。如下是一些分析结论：")]),t._v(" "),a("p",[t._v("一个渲染帧内 commit 的多次 DOM 改动会被合并渲染；\n耗时 JS 会造成丢帧；\n渲染帧间隔为 16ms 左右；\n避免耗时脚本、交错读写样式以保证流畅的渲染。\n渲染帧的流程\n渲染帧是指浏览器一次完整绘制过程，帧之间的时间间隔是 DOM 视图更新的最小间隔。 由于主流的屏幕刷新率都在 60Hz，那么渲染一帧的时间就必须控制在 16ms 才能保证不掉帧。 也就是说每一次渲染都要在 16ms 内页面才够流畅不会有卡顿感。 这段时间内浏览器需要完成如下事情：")]),t._v(" "),a("ul",[a("li",[t._v("脚本执行（JavaScript）：脚本造成了需要重绘的改动，比如增删 DOM、请求动画等")]),t._v(" "),a("li",[t._v("样式计算（CSS Object Model）：级联地生成每个节点的生效样式。")]),t._v(" "),a("li",[t._v("布局（Layout）：计算布局，执行渲染算法")]),t._v(" "),a("li",[t._v("重绘（Paint）：各层分别进行绘制（比如 3D 动画）\n合成（Composite）：合成各层的渲染结果\n最初 Webkit 使用定时器进行渲染间隔控制， 2014 年时开始 使用显示器的 vsync 信号控制渲染（其实直接控制的是合成这一步）。 这意味着 16ms 内多次 commit 的 DOM 改动会合并为一次渲染。")])]),t._v(" "),a("p",[t._v("耗时 JS 会造成丢帧\nJavaScript 在并发编程上一个重要特点是“Run To Completion”。在事件循环的一次 Tick 中， 如果要执行的逻辑太多会一直阻塞下一个 Tick，所有异步过程都会被阻塞。 一个流畅的页面中，JavaScript 引擎中的执行队列可能是这样的：")]),t._v(" "),a("p",[t._v("执行 JS -> 空闲 -> 绘制（16ms）-> 执行 JS -> 空闲 -> 绘制（32ms）-> ...\n如果在某个时刻有太多 JavaScript 要执行，就会丢掉一次帧的绘制：")]),t._v(" "),a("p",[t._v("执行很多 JS...（20ms）-> 空闲 -> 绘制（32ms）-> ...\n例如下面的脚本在保持 JavaScript 忙的状态（持续 5s）下每隔 1s 新增一行 DOM 内容。")]),t._v(" "),a("div",{staticClass:"language-Html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" then "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" then "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello!\\n'")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    then "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("可以观察到虽然每秒都会写一次 DOM，但在 5s 结束后才会全部渲染出来，明显耗时脚本阻塞了渲染。")]),t._v(" "),a("p",[t._v("测量渲染帧间隔\n浏览器的渲染间隔其实是很难测量的。即使通过 clientHeight 这样的接口也只能强制进行 Layout，是否 Paint 上屏仍未可知。")]),t._v(" "),a("p",[t._v("幸运的是，最新的浏览器基本都支持了 requestAnimationFrame 接口。 使用这个 API 可以请求浏览器在下一个渲染帧执行某个回调，于是测量渲染间隔就很方便了：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" then "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" then"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" count\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ms "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time\\"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("count: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\\t")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("ms/frame\\t")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("fps"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("fps")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("每次 requestAnimationFrame 回调执行时发起下一个 requestAnimationFrame，统计一段时间即可得到渲染帧间隔，以及 fps。逼近 16.6 ms")]),t._v(" "),a("p",[t._v("渲染优化建议\n现在我们知道浏览器需要在 16ms 内完成整个 JS->Style->Layout->Paint->Composite 流程，那么基于此有哪些页面渲染的优化方式呢？")]),t._v(" "),a("p",[t._v("避免耗时的 JavaScript 代码\n耗时超过 16ms 的 JavaScript 可能会丢帧让页面变卡。如果有太多事情要做可以把这些工作重新设计，分割到各个阶段中执行。并充分利用缓存和懒初始化等策略。不同执行时机的 JavaScript 有不同的优化方式：")]),t._v(" "),a("p",[t._v("初始化脚本（以及其他同步脚本）。对于大型 SPA 中首页卡死浏览器也是常事，建议增加服务器端渲染或者应用懒初始化策略。\n事件处理函数（以及其他异步脚本）。在复杂交互的 Web 应用中，耗时脚本可以优化算法或者迁移到 Worker 中。Worker 在移动端的兼容性已经不很错了，可以生产环境使用。\n避免交错读写样式\n在编写涉及到布局的脚本时，常常会多次读写样式。比如：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发一次 Layout")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientHeight\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再次触发 Layout")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),a("p",[t._v("因为浏览器需要给你返回正确的宽高，上述代码片段中每次 Layout 触发都会阻塞当前脚本。 如果把交错的读写分隔开，就可以减少触发 Layout 的次数：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发一次 Layout")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientHeight\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n")])])]),a("p",[t._v("小心事件触发的渲染\n我们知道 DOM 事件的触发 是异步的，但事件处理器的执行是可能在同一个渲染帧的， 甚至就在同一个 Tick。例如异步地获取 HTML 并拼接到当前页面上， 通过监听 XHR 的 onprogress 事件 来模拟流式渲染：")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://harttle.land'")]),t._v("\n\n  xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onprogress")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xmlhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("上述渲染算法在网络情况较差时是起作用的，但不代表它是正确的。 比如当 https://harttle.land 对应的 HTML 非常大而且网络很好时， onprogress 事件处理器可能碰撞在同一个渲染帧中，或者干脆在同一个 Tick。 这样页面会长时间空白，即使 onprogress 早已被调用过。")]),t._v(" "),a("h2",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("h2",{attrs:{id:"弹性盒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹性盒"}},[t._v("#")]),t._v(" 弹性盒")]),t._v(" "),a("p",[t._v("display:flex;")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction: row 横 | column | 主轴⽅向")]),t._v(" "),a("li",[t._v("flex-wrap: nowrap 不换⾏ | wrap | wrap-reverse 是否⾃动换⾏")]),t._v(" "),a("li",[t._v("justify-content: flex-start 左或上 | flex-end | center |space-between | space-around 主轴对⻬⽅式")]),t._v(" "),a("li",[t._v("align-items: stretch ⾼度不设置则占满 | flex-start | flex-end | center | baseline 交叉轴对⻬⽅式")]),t._v(" "),a("li",[t._v("flex-shrink: 默认 1，空间不⾜按⽐缩⼩，设为 0 不缩⼩")]),t._v(" "),a("li",[t._v("flex-basis: 默认 auto，占据主轴多少空间")]),t._v(" "),a("li",[t._v("flex-grow：默认为 0，属性定义项⽬的放⼤⽐例，即如果存在剩余空间，也不放⼤。")]),t._v(" "),a("li",[t._v("flex: 0 1 auto，")])]),t._v(" "),a("h2",{attrs:{id:"如何让元素水平垂直居中-最多问到"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何让元素水平垂直居中-最多问到"}},[t._v("#")]),t._v(" "),a("strong",[t._v("如何让元素⽔平垂直居中（最多问到）")])]),t._v(" "),a("ol",[a("li",[t._v("定位偏移 top，left 为 50%，margin-left，margin-top 为⼩元素的-50%")]),t._v(" "),a("li",[t._v("定位平均 top，left，bottom，right 为 0，margin 为 auto")]),t._v(" "),a("li",[t._v("定位平移 top，left 为 50%，transform：translate(⼩元素的 50%)")]),t._v(" "),a("li",[t._v("弹性盒 主轴与交叉轴居中")]),t._v(" "),a("li",[t._v("表格 ⽗ block，⼦ table-cell")])]),t._v(" "),a("h2",{attrs:{id:"flex-的几个默认属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-的几个默认属性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("flex 的⼏个默认属性")])]),t._v(" "),a("p",[t._v("第⼀个值为默认值")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction: row 横 | column | 主轴⽅向")]),t._v(" "),a("li",[t._v("flex-wrap: nowrap 不换⾏ | wrap | wrap-reverse 是否⾃动换⾏")]),t._v(" "),a("li",[t._v("justify-content: flex-start 左或上 | flex-end | center |space-between | space-around 主轴对⻬⽅式")]),t._v(" "),a("li",[t._v("align-items: stretch ⾼度不设置则占满 | flex-start | flex-end | center | baseline 交叉轴对⻬⽅式")]),t._v(" "),a("li",[t._v("flex-shrink: 默认 1，空间不⾜按⽐缩⼩，设为 0 不缩⼩")]),t._v(" "),a("li",[t._v("flex-basis: 默认 auto，占据主轴多少空间")]),t._v(" "),a("li",[t._v("flex-grow：默认为 0，属性定义项⽬的放⼤⽐例，即如果存在剩余空间，也不放⼤。")]),t._v(" "),a("li",[t._v("flex: 0 1 auto，")])]),t._v(" "),a("h2",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" "),a("strong",[t._v("清除浮动")])]),t._v(" "),a("ol",[a("li",[t._v("给高度塌陷的元素加 overflow: hidden （触发 BFC）")]),t._v(" "),a("li",[t._v("给高度塌陷的元素里面的最下面加一个空 div，div 属性 clear:both")]),t._v(" "),a("li",[t._v("万能清除法\ndiv::after{\ncontent:'';\nheight:0;\noverflow:hidden;\nvisibility:hidden;\ndisplay:block;\nclear:both;\n}")])]),t._v(" "),a("h2",{attrs:{id:"浏览器是如何渲染页面的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是如何渲染页面的"}},[t._v("#")]),t._v(" 浏览器是如何渲染页面的？")]),t._v(" "),a("p",[t._v("当浏览器的网络线程收到 HTML 文档后，会产生一个渲染任务，并将其传递给渲染主线程的消息队列。")]),t._v(" "),a("p",[t._v("在事件循环机制的作用下，渲染主线程取出消息队列中的渲染任务，开启渲染流程。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("整个渲染流程分为多个阶段，分别是： HTML 解析、样式计算、布局、分层、绘制、分块、光栅化、画")]),t._v(" "),a("p",[t._v("每个阶段都有明确的输入输出，上一个阶段的输出会成为下一个阶段的输入。")]),t._v(" "),a("p",[t._v("这样，整个渲染流程就形成了一套组织严密的生产流水线。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("解析 HTML")]),t._v("。")]),t._v(" "),a("p",[t._v("解析过程中遇到 CSS 解析 CSS，遇到 JS 执行 JS。为了提高解析效率，浏览器在开始解析前，会启动一个预解析的线程，率先下载 HTML 中的外部 CSS 文件和 外部的 JS 文件。")]),t._v(" "),a("p",[t._v("如果主线程解析到"),a("code",[t._v("link")]),t._v("位置，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的 HTML。这是因为下载和解析 CSS 的工作是在预解析线程中进行的。这就是 CSS 不会阻塞 HTML 解析的根本原因。")]),t._v(" "),a("p",[t._v("如果主线程解析到"),a("code",[t._v("script")]),t._v("位置，会停止解析 HTML，转而等待 JS 文件下载好，并将全局代码解析执行完成后，才能继续解析 HTML。这是因为 JS 代码的执行过程可能会修改当前的 DOM 树，所以 DOM 树的生成必须暂停。这就是 JS 会阻塞 HTML 解析的根本原因。")]),t._v(" "),a("p",[t._v("第一步完成后，会得到 DOM 树和 CSSOM 树，浏览器的默认样式、内部样式、外部样式、行内样式均会包含在 CSSOM 树中。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("样式计算")]),t._v("。")]),t._v(" "),a("p",[t._v("主线程会遍历得到的 DOM 树，依次为树中的每个节点计算出它最终的样式，称之为 Computed Style。")]),t._v(" "),a("p",[t._v("在这一过程中，很多预设值会变成绝对值，比如"),a("code",[t._v("red")]),t._v("会变成"),a("code",[t._v("rgb(255,0,0)")]),t._v("；相对单位会变成绝对单位，比如"),a("code",[t._v("em")]),t._v("会变成"),a("code",[t._v("px")])]),t._v(" "),a("p",[t._v("这一步完成后，会得到一棵带有样式的 DOM 树。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("布局")]),t._v("，布局完成后会得到布局树。")]),t._v(" "),a("p",[t._v("布局阶段会依次遍历 DOM 树的每一个节点，计算每个节点的几何信息。例如节点的宽高、相对包含块的位置。")]),t._v(" "),a("p",[t._v("大部分时候，DOM 树和布局树并非一一对应。")]),t._v(" "),a("p",[t._v("比如"),a("code",[t._v("display:none")]),t._v("的节点没有几何信息，因此不会生成到布局树；又比如使用了伪元素选择器，虽然 DOM 树中不存在这些伪元素节点，但它们拥有几何信息，所以会生成到布局树中。还有匿名行盒、匿名块盒等等都会导致 DOM 树和布局树无法一一对应。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("分层")])]),t._v(" "),a("p",[t._v("主线程会使用一套复杂的策略对整个布局树中进行分层。")]),t._v(" "),a("p",[t._v("分层的好处在于，将来某一个层改变后，仅会对该层进行后续处理，从而提升效率。")]),t._v(" "),a("p",[t._v("滚动条、堆叠上下文、transform、opacity 等样式都会或多或少的影响分层结果，也可以通过"),a("code",[t._v("will-change")]),t._v("属性更大程度的影响分层结果。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("绘制")])]),t._v(" "),a("p",[t._v("主线程会为每个层单独产生绘制指令集，用于描述这一层的内容该如何画出来。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("完成绘制后，主线程将每个图层的绘制信息提交给合成线程，剩余工作将由合成线程完成。")]),t._v(" "),a("p",[t._v("合成线程首先对每个图层进行分块，将其划分为更多的小区域。")]),t._v(" "),a("p",[t._v("它会从线程池中拿取多个线程来完成分块工作。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("分块完成后，进入"),a("strong",[t._v("光栅化")]),t._v("阶段。")]),t._v(" "),a("p",[t._v("合成线程会将块信息交给 GPU 进程，以极高的速度完成光栅化。")]),t._v(" "),a("p",[t._v("GPU 进程会开启多个线程来完成光栅化，并且优先处理靠近视口区域的块。")]),t._v(" "),a("p",[t._v("光栅化的结果，就是一块一块的位图")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("最后一个阶段就是"),a("strong",[t._v("画")]),t._v("了")]),t._v(" "),a("p",[t._v("合成线程拿到每个层、每个块的位图后，生成一个个「指引（quad）」信息。")]),t._v(" "),a("p",[t._v("指引会标识出每个位图应该画到屏幕的哪个位置，以及会考虑到旋转、缩放等变形。")]),t._v(" "),a("p",[t._v("变形发生在合成线程，与渲染主线程无关，这就是"),a("code",[t._v("transform")]),t._v("效率高的本质原因。")]),t._v(" "),a("p",[t._v("合成线程会把 quad 提交给 GPU 进程，由 GPU 进程产生系统调用，提交给 GPU 硬件，完成最终的屏幕成像。")]),t._v(" "),a("h2",{attrs:{id:"什么是-reflow-回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-reflow-回流"}},[t._v("#")]),t._v(" 什么是 reflow(回流)？")]),t._v(" "),a("p",[t._v("reflow 的本质就是重新计算 layout 树。")]),t._v(" "),a("p",[t._v("当进行了会影响布局树的操作后，需要重新计算布局树，会引发 layout。")]),t._v(" "),a("p",[t._v("为了避免连续的多次操作导致布局树反复计算，浏览器会合并这些操作，当 JS 代码全部完成后再进行统一计算。所以，改动属性造成的 reflow 是异步完成的。")]),t._v(" "),a("p",[t._v("也同样因为如此，当 JS 获取布局属性时，就可能造成无法获取到最新的布局信息。")]),t._v(" "),a("p",[t._v("浏览器在反复权衡下，最终决定获取属性立即 reflow。")]),t._v(" "),a("h2",{attrs:{id:"什么是-repaint-重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-repaint-重绘"}},[t._v("#")]),t._v(" 什么是 repaint(重绘)？")]),t._v(" "),a("p",[t._v("repaint 的本质就是重新根据分层信息计算了绘制指令。")]),t._v(" "),a("p",[t._v("当改动了可见样式后，就需要重新计算，会引发 repaint。")]),t._v(" "),a("p",[t._v("由于元素的布局信息也属于可见样式，所以 reflow 一定会引起 repaint。")]),t._v(" "),a("h2",{attrs:{id:"本地存储-缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地存储-缓存"}},[t._v("#")]),t._v(" "),a("strong",[t._v("本地存储 缓存")])]),t._v(" "),a("ul",[a("li",[t._v("存储大小\ncookie 数据大小不能超过 4k。\nsessionStorage 和 localStorage 虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大。")]),t._v(" "),a("li",[t._v("有效时间\nlocalStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\nsessionStorage 数据在当前浏览器窗口关闭后自动删除。\ncookie 设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭")]),t._v(" "),a("li",[t._v("数据与服务器之间的交互方式\ncookie 的数据会自动的传递到服务器，服务器端也可以写 cookie 到客户端\nsessionStorage 和 localStorage 不会自动把数据发给服务器，仅在本地保存。")])]),t._v(" "),a("h2",{attrs:{id:"css-盒模型的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-盒模型的理解"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Css 盒模型的理解")])]),t._v(" "),a("p",[t._v("当对⼀个⽂档进⾏布局的时候，浏览器的渲染引擎会将所有元素表示为⼀个个矩形的盒⼦。CSS 决定这些盒⼦的⼤⼩、位置以及属性（例如颜⾊、背\n景、边框尺⼨…）\n盒模型由 content（内容）、padding（内边距）、border（边框）、margin（外边距）组成。\n⽽ IE 怪异盒模型 width 的宽度并不是 content 的宽度，⽽是 border + padding + content 的宽度值\n元素占据的宽度 = margin+ width")]),t._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("概念：\nBFC 块状格式化上下文 （block formatting context），是一个独立空间，只有块状元素参与，规定了里面的块状元素如何布局，与外界毫不相干")])]),t._v(" "),a("li",[a("p",[t._v("如何触发 BFC 1. 根元素 html 2. float 除了 none 选项之外 3. position : absolute/fixed 4. display: inline-block/table-cell/flex/inline-flex 5. overflow 除了 visible 选项之外")])]),t._v(" "),a("li",[a("p",[t._v("BFC 布局规则")]),t._v(" "),a("ol",[a("li",[t._v("内部的块状元素从上往下排列")]),t._v(" "),a("li",[t._v("垂直方向的距离由 margin 控制\n属于同一个 BFC 的元素，上下 margin 会重叠")]),t._v(" "),a("li",[t._v("每个元素的 margin-left 会和父元素的 border-left 相接触")]),t._v(" "),a("li",[t._v("BFC 的区域不会和浮动元素相重叠")]),t._v(" "),a("li",[t._v("BFC 区域和外界空间毫不相干")]),t._v(" "),a("li",[t._v("计算 BFC 元素高度，浮动元素也参与计算")])])]),t._v(" "),a("li",[a("p",[t._v("BFC 应用")]),t._v(" "),a("ol",[a("li",[t._v("两栏布局")]),t._v(" "),a("li",[t._v("清除 margin 重叠")]),t._v(" "),a("li",[t._v("清除浮动")])])])]),t._v(" "),a("h2",{attrs:{id:"常见浏览器兼容问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见浏览器兼容问题"}},[t._v("#")]),t._v(" "),a("strong",[t._v("常见浏览器兼容问题？")])]),t._v(" "),a("ol",[a("li",[t._v("不同浏览器下的 padding 和 margin 不同\n解决方法：使用通配符(*)将 padding 和 margin 设置为 0")]),t._v(" "),a("li",[t._v("块属性标签 float 之后，又有横向的 margin 值，在 IE6 中显示会比设置的大（IE6 双边距 bug）\n解决方法：在 float 标签样式控制中加入 display:inline;")]),t._v(" "),a("li",[t._v("设置较小的高度标签（一般小于 10px），在 IE6，IE7，遨游中超出自己设置的高度\n解决方法：给超出高度的标签设置 overflow:hidden;或者设置行高 line-height 小于你设置的高度。")]),t._v(" "),a("li",[t._v("行内标签设置 display:block;后又采用 float 布局，再设置横向 margin 值时，在 IE6 中显示会比设置的大（IE6 双边距 bug）\n解决方法：在 display:block;后面加上 display:inline;display:table;")])]),t._v(" "),a("h2",{attrs:{id:"清除图片间隙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除图片间隙"}},[t._v("#")]),t._v(" 清除图片间隙")]),t._v(" "),a("ul",[a("li",[t._v("清除图片左右的间隙")]),t._v(" "),a("li",[t._v("将图片挨着写（中间没有空格，也没有回车）")]),t._v(" "),a("li",[t._v("将图片的父元素的 font-size 设置成 0")]),t._v(" "),a("li",[t._v("给图片设置浮动")]),t._v(" "),a("li",[t._v("清除图片的上下间距")]),t._v(" "),a("li",[t._v("将图片设置成 display: block")]),t._v(" "),a("li",[t._v("给图片设置 vertical-align: top / middle / bottom")])]),t._v(" "),a("h2",{attrs:{id:"css-transform-rotate-导致的布局问题与通用解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-transform-rotate-导致的布局问题与通用解决方案"}},[t._v("#")]),t._v(" CSS "),a("code",[t._v("transform: rotate")]),t._v(" 导致的布局问题与通用解决方案")]),t._v(" "),a("p",[a("strong",[t._v("问题的通用描述")])]),t._v(" "),a("p",[t._v("当你对一个元素（例如一个“矮胖”的矩形）应用 "),a("code",[t._v("transform: rotate(90deg)")]),t._v(" 后，它在视觉上虽然变成了“瘦高”的形状，但它在父容器中的布局表现却不正确。")]),t._v(" "),a("p",[a("strong",[t._v("常见症状：")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("父容器尺寸错误：")]),t._v(" 包裹旋转元素的父容器，其尺寸（"),a("code",[t._v("width")]),t._v("/"),a("code",[t._v("height")]),t._v("）依然维持着子元素"),a("strong",[t._v("旋转前")]),t._v("的“矮胖”尺寸，不会自动收缩来适应旋转后的“瘦高”形状。")]),t._v(" "),a("li",[a("strong",[t._v("布局压缩/变形：")]),t._v(" 如果将多个旋转后的元素放在一个 Flex 或 Grid 容器中，它们会被严重压缩或变形。这是因为布局系统仍然在尝试将它们（旋转前的“矮胖”尺寸）塞进父容器。")])]),t._v(" "),a("h3",{attrs:{id:"核心原因-布局-layout-与-绘制-paint-分离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心原因-布局-layout-与-绘制-paint-分离"}},[t._v("#")]),t._v(" 核心原因：布局 (Layout) 与 绘制 (Paint) 分离")]),t._v(" "),a("p",[t._v("这个问题的根本原因在于浏览器渲染页面的两个核心阶段是分离的：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("布局阶段 (Layout)：")]),t._v(" 浏览器计算每个元素应该在页面上占据多大的空间（即“盒子模型”）。"),a("strong",[a("code",[t._v("transform")]),t._v(" 属性在此阶段被完全忽略。")]),t._v(" 浏览器只会看到你旋转前的“矮胖”尺寸，并为它保留一块“矮胖”的空间。")]),t._v(" "),a("li",[a("strong",[t._v("绘制阶段 (Paint)：")]),t._v(" 布局确定后，浏览器才开始“画”出元素。在这个阶段，它才看到了 "),a("code",[t._v("transform: rotate(90deg)")]),t._v(" 指令，并把已经摆好位置的元素在视觉上旋转。")])]),t._v(" "),a("p",[a("strong",[t._v("结论：")]),t._v(" "),a("code",[t._v("transform")]),t._v(" 只是一个“事后”的视觉特效，它"),a("strong",[t._v("不会")]),t._v("影响第一阶段就已经计算好的布局空间。")]),t._v(" "),a("h3",{attrs:{id:"通用的根源性解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用的根源性解决方案"}},[t._v("#")]),t._v(" 通用的根源性解决方案")]),t._v(" "),a("p",[t._v("既然问题的根源在于 "),a("code",[t._v("transform")]),t._v(" 无法影响布局，那么最直接的解决方案就是：")]),t._v(" "),a("p",[a("strong",[t._v("放弃使用 "),a("code",[t._v("transform")]),t._v(" 来改变布局，转而直接改变布局本身。")])]),t._v(" "),a("p",[a("strong",[t._v("通用实现方式：")])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("使用 JavaScript 状态：")]),t._v(" 在你的组件中（例如 React 中的 "),a("code",[t._v("useState")]),t._v("），维护一个状态来决定元素是“宽”还是“高”。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：React")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("isTall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setIsTall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("动态切换 CSS 类：")]),t._v(" 根据这个状态，动态地切换元素上的 CSS 类名。")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：JSX")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isTall "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shape-tall'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shape-wide'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ...内容... */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("在 CSS 中定义布局：")]),t._v(" 在 CSS 中，为这两个类分别定义"),a("strong",[t._v("真正影响布局")]),t._v("的属性（如 "),a("code",[t._v("width/height")]),t._v(" 或 "),a("code",[t._v("grid-template-*")]),t._v("）。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 方案 A: 直接改变宽高 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".shape-wide")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".shape-tall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 方案 B: 改变 Grid 布局 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".shape-wide")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".shape-tall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("transform")]),t._v(" 用于视觉：")]),t._v(" 当你只需要一个纯粹的视觉效果（如动画、悬停放大），并且"),a("strong",[t._v("不希望")]),t._v("它干扰其他元素的布局时，"),a("code",[t._v("transform")]),t._v(" 是最佳选择。")]),t._v(" "),a("li",[a("strong",[t._v("布局属性用于结构：")]),t._v(" 当你需要一个元素的改变能"),a("strong",[t._v("影响")]),t._v("到周边的布局（如推开其他元素、改变父容器大小）时，"),a("strong",[t._v("不要")]),t._v("使用 "),a("code",[t._v("transform")]),t._v("。请优先考虑改变 "),a("code",[t._v("width")]),t._v("、"),a("code",[t._v("height")]),t._v("、"),a("code",[t._v("grid-template-columns/rows")]),t._v("、"),a("code",[t._v("flex-direction")]),t._v(" 等真正的布局属性。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);