(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{389:function(t,s,a){"use strict";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"flutter-综合学习笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flutter-综合学习笔记"}},[t._v("#")]),t._v(" Flutter 综合学习笔记")]),t._v(" "),s("p",[t._v("这是一份根据前三天学习和实践整理的综合笔记，旨在帮助理解 Flutter 的核心概念，从基础入门到状态管理。")]),t._v(" "),s("h2",{attrs:{id:"_1-flutter-核心基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-flutter-核心基础"}},[t._v("#")]),t._v(" 1. Flutter 核心基础")]),t._v(" "),s("h3",{attrs:{id:"flutter-的项目入口-lib-main-dart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flutter-的项目入口-lib-main-dart"}},[t._v("#")]),t._v(" Flutter 的项目入口："),s("code",[t._v("lib/main.dart")])]),t._v(" "),s("p",[t._v("每个 Flutter 应用程序的执行都始于 "),s("code",[t._v("lib/main.dart")]),t._v(" 文件，该文件是程序的指定入口点。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("lib 目录")]),t._v(": 此目录是项目的核心，作为几乎所有 Dart 源代码的主要存储库。")]),t._v(" "),s("li",[s("strong",[t._v("main.dart 文件")]),t._v(": 这是应用的"),s("strong",[t._v("主入口文件")]),t._v("。操作系统（无论是安卓、iOS还是Web）启动您的应用时，第一个执行的就是这个文件里的 "),s("code",[t._v("main()")]),t._v(" 函数。")]),t._v(" "),s("li",[s("strong",[t._v("main() 函数")]),t._v(": 这是程序的起点。在这个函数里，我们通常会调用 "),s("code",[t._v("runApp()")]),t._v(" 函数。")])]),t._v(" "),s("p",[s("strong",[t._v("代码示例 (lib/main.dart):")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'package:flutter/material.dart'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 其他导入")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 程序的入口函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// runApp() 告诉 Flutter 运行哪个组件作为应用的根")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MyApp 就是应用的根组件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatelessWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"核心理念-一切皆组件-everything-is-a-widget"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心理念-一切皆组件-everything-is-a-widget"}},[t._v("#")]),t._v(" 核心理念：一切皆组件 (Everything is a Widget)")]),t._v(" "),s("p",[t._v("这是您需要记住的最重要的一句话。在 Flutter 中，您看到的"),s("strong",[t._v("任何东西")]),t._v("都是一个“组件”（Widget），或者由更小的组件组合而成。")]),t._v(" "),s("ul",[s("li",[t._v("一个按钮？是 "),s("code",[t._v("ElevatedButton")]),t._v(" 组件。")]),t._v(" "),s("li",[t._v("一行文字？是 "),s("code",[t._v("Text")]),t._v(" 组件。")]),t._v(" "),s("li",[t._v("甚至连页面的整体布局（比如居中 "),s("code",[t._v("Center")]),t._v("、按行排列 "),s("code",[t._v("Row")]),t._v("、按列排列 "),s("code",[t._v("Column")]),t._v("），以及看不见的内边距 "),s("code",[t._v("Padding")]),t._v("，都是组件。")]),t._v(" "),s("li",[s("code",[t._v("Scaffold")]),t._v(" 是一个搭建页面的"),s("strong",[t._v("脚手架组件")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"override-到底是什么意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#override-到底是什么意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("@override")]),t._v(" 到底是什么意思？")]),t._v(" "),s("p",[s("code",[t._v("@override")]),t._v(" 是一个“注解”，意思是：“我正在"),s("strong",[t._v("重写")]),t._v("父类中的同名方法”。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("背景")]),t._v(": 您的 "),s("code",[t._v("_HomePageState")]),t._v(" 继承了 "),s("code",[t._v("State<HomePage>")]),t._v("。"),s("code",[t._v("State")]),t._v(" 类本身已经定义了一个叫做 "),s("code",[t._v("build")]),t._v(" 的方法。")]),t._v(" "),s("li",[s("strong",[t._v("作用")]),t._v(": 您的 "),s("code",[t._v("_HomePageState")]),t._v(" 必须提供一个具体的 "),s("code",[t._v("build")]),t._v(" 方法来描述页面内容。"),s("code",[t._v("@override")]),t._v(" 就在这里起作用，它告诉编译器和阅读代码的人：“我这里的 "),s("code",[t._v("build")]),t._v(" 方法是在重写父类 "),s("code",[t._v("State")]),t._v(" 的 "),s("code",[t._v("build")]),t._v(" 方法，不是我自己随便创建的新方法。”")]),t._v(" "),s("li",[s("strong",[t._v("好处")]),t._v(": 1. 代码更清晰。2. 安全检查（拼写错误会报错）。")])]),t._v(" "),s("p",[s("strong",[t._v("代码示例 (lib/pages/home_page.dart):")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _HomePageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @override 表示这个 build 方法是重写父类 State 的方法")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 返回您的组件树")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"dart-命名规范与-下划线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dart-命名规范与-下划线"}},[t._v("#")]),t._v(" Dart 命名规范与 "),s("code",[t._v("_")]),t._v(" (下划线)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("类名")]),t._v(": 使用 "),s("code",[t._v("UpperCamelCase")]),t._v(" (大驼峰命名法)，例如 "),s("code",[t._v("HomePage")]),t._v(", "),s("code",[t._v("MyApp")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("文件名、变量名、函数名")]),t._v(": 使用 "),s("code",[t._v("lowerCamelCase")]),t._v(" (小驼峰命名法)。")]),t._v(" "),s("li",[s("strong",[t._v("_ (下划线) 表示私有")]),t._v(": 在 Dart 中，如果一个变量、函数或类的名字以下划线 "),s("code",[t._v("_")]),t._v(" 开头，那么它就是"),s("strong",[t._v("私有的")]),t._v("。\n"),s("ul",[s("li",[s("strong",[t._v("“私有”的范围")]),t._v(": 不是指这个类内部，而是指"),s("strong",[t._v("当前文件 (.dart 文件) 内部")]),t._v("。"),s("code",[t._v("_HomePageState")]),t._v(" 这个类只能在 "),s("code",[t._v("home_page.dart")]),t._v(" 这个文件里被访问，其他文件无法 "),s("code",[t._v("import")]),t._v(" 和使用它。")])])])]),t._v(" "),s("h3",{attrs:{id:"final-的意思"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final-的意思"}},[t._v("#")]),t._v(" "),s("code",[t._v("final")]),t._v(" 的意思")]),t._v(" "),s("p",[s("code",[t._v("final")]),t._v(" 是一个关键字，用来声明一个"),s("strong",[t._v("只能被赋值一次")]),t._v("的变量。一旦被赋值，它的值（或引用）就不能再改变了。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("为什么组件的属性常用 final?")]),t._v("\n在 Flutter 中，组件被设计为“不可变的”（immutable）。如果需要更新界面，Flutter 的做法是创建一个新的组件实例来替换旧的，而不是去修改旧组件的属性。使用 "),s("code",[t._v("final")]),t._v(" 可以强制保证这一点，让代码更安全。")])]),t._v(" "),s("p",[s("strong",[t._v("代码示例 (lib/pages/web_view_page.dart):")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatefulWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// title 被声明为 final，意味着一旦 WebViewPage 被创建，")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 它的 title 就不能再被修改了。")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" required "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-布局与样式-styling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-布局与样式-styling"}},[t._v("#")]),t._v(" 2. 布局与样式 (Styling)")]),t._v(" "),s("h3",{attrs:{id:"safearea-不被状态栏遮挡的安全区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#safearea-不被状态栏遮挡的安全区域"}},[t._v("#")]),t._v(" "),s("code",[t._v("SafeArea")]),t._v("：不被状态栏遮挡的安全区域")]),t._v(" "),s("p",[s("code",[t._v("SafeArea")]),t._v(" 是一个非常有用的布局组件。它的作用是创建一个“安全”的矩形区域，这个区域会自动避开手机屏幕顶部的刘海、状态栏，以及底部的导航条。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例 (home_page.dart):")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scaffold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 body 包裹在 SafeArea 中")]),t._v("\n  body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SafeArea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Column 里的所有内容都不会被遮挡了")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"添加样式-styling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加样式-styling"}},[t._v("#")]),t._v(" 添加样式 (Styling)")]),t._v(" "),s("p",[t._v("在 Flutter 中，给组件添加样式通常是通过组件自身的属性来实现的。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Text 组件")]),t._v(": 使用 "),s("code",[t._v("style")]),t._v(" 属性，它接收一个 "),s("code",[t._v("TextStyle")]),t._v(" 对象。")]),t._v(" "),s("li",[s("strong",[t._v("Container 组件")]),t._v(": 使用 "),s("code",[t._v("decoration")]),t._v(" 属性，它接收一个 "),s("code",[t._v("BoxDecoration")]),t._v(" 对象，可以设置边框、圆角、背景色等。")])]),t._v(" "),s("h3",{attrs:{id:"尺寸单位全解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#尺寸单位全解析"}},[t._v("#")]),t._v(" 尺寸单位全解析")]),t._v(" "),s("h4",{attrs:{id:"flutter-默认单位-逻辑像素-logical-pixels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flutter-默认单位-逻辑像素-logical-pixels"}},[t._v("#")]),t._v(" Flutter 默认单位：逻辑像素 (Logical Pixels)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("写法")]),t._v(": 直接写数字，如 "),s("code",[t._v("width: 150")]),t._v(", "),s("code",[t._v("fontSize: 14")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("含义")]),t._v(": 这是一个"),s("strong",[t._v("固定的、绝对的")]),t._v("单位。在不同尺寸屏幕上视觉比例会失调。")])]),t._v(" "),s("h4",{attrs:{id:"flutter-screenutil-适配单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flutter-screenutil-适配单位"}},[t._v("#")]),t._v(" "),s("code",[t._v("flutter_screenutil")]),t._v(" 适配单位")]),t._v(" "),s("p",[t._v("这是用来实现UI适配的利器，它们都是"),s("strong",[t._v("相对单位")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v(".w (width)")]),t._v(": 基于"),s("strong",[t._v("屏幕宽度")]),t._v("进行缩放。适合设置"),s("strong",[t._v("水平方向")]),t._v("的尺寸。")]),t._v(" "),s("li",[s("strong",[t._v(".h (height)")]),t._v(": 基于"),s("strong",[t._v("屏幕高度")]),t._v("进行缩放。适合设置"),s("strong",[t._v("垂直方向")]),t._v("的尺寸。")]),t._v(" "),s("li",[s("strong",[t._v(".r (radius/responsive)")]),t._v(": 基于屏幕"),s("strong",[t._v("宽高的较小值")]),t._v("进行缩放。非常适合设置"),s("strong",[t._v("圆角半径")]),t._v("或"),s("strong",[t._v("正方形元素")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v(".sp (scalable pixel)")]),t._v(": 专门用于"),s("strong",[t._v("字体大小")]),t._v("的适配。它不仅会根据屏幕尺寸缩放，还会"),s("strong",[t._v("参考用户在系统设置里调整的字体大小")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_3-路由与导航-navigation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-路由与导航-navigation"}},[t._v("#")]),t._v(" 3. 路由与导航 (Navigation)")]),t._v(" "),s("p",[t._v("“路由”就是页面的代称。Flutter 使用一个 "),s("code",[t._v("Navigator")]),t._v(" (导航器) 组件来管理一个页面栈（先进后出）。")]),t._v(" "),s("h3",{attrs:{id:"基本路由跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本路由跳转"}},[t._v("#")]),t._v(" 基本路由跳转")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("跳转到新页面 (push)")]),t._v(": "),s("code",[t._v("Navigator.push()")]),t._v(" 会将一个新的页面（路由）压入栈顶。")]),t._v(" "),s("li",[s("strong",[t._v("返回上一页 (pop)")]),t._v(": "),s("code",[t._v("Navigator.pop()")]),t._v(" 会将栈顶的页面弹出。")])]),t._v(" "),s("h3",{attrs:{id:"路由封装-进阶"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由封装-进阶"}},[t._v("#")]),t._v(" 路由封装（进阶）")]),t._v(" "),s("p",[t._v("为了让项目结构更清晰，我们将路由跳转进行封装。")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("lib/route/routes.dart")]),t._v(": 这个文件负责"),s("strong",[t._v("定义")]),t._v("和"),s("strong",[t._v("生成")]),t._v("路由。\n"),s("ul",[s("li",[s("code",[t._v("RoutePaths")]),t._v(" 类：用 "),s("code",[t._v("static const")]),t._v(" 字符串常量来定义所有页面的路由名称（如 "),s("code",[t._v("'/web_view_page'")]),t._v("），避免使用魔法字符串。")]),t._v(" "),s("li",[s("code",[t._v("Routes")]),t._v(" 类："),s("code",[t._v("generateRoute")]),t._v(" 静态方法像一个“交通枢纽”，通过 "),s("code",[t._v("switch")]),t._v(" 语句判断路由名称，并返回对应的页面。")])])]),t._v(" "),s("li",[s("strong",[t._v("lib/route/RouteUtils.dart")]),t._v(": 这个文件封装了具体的"),s("strong",[t._v("跳转动作")]),t._v("。\n"),s("ul",[s("li",[t._v("创建 "),s("code",[t._v("push")]),t._v(" 和 "),s("code",[t._v("pushForNamed")]),t._v(" 等静态方法，将 "),s("code",[t._v("Navigator.of(context).push(...)")]),t._v(" 封装起来。")]),t._v(" "),s("li",[s("strong",[t._v("好处")]),t._v("：页面逻辑更简洁，调用 "),s("code",[t._v("RouteUtils.pushForNamed(context, ...)")]),t._v(" 即可。")])])])]),t._v(" "),s("h3",{attrs:{id:"页面传值的两种核心方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面传值的两种核心方式"}},[t._v("#")]),t._v(" 页面传值的两种核心方式")]),t._v(" "),s("h4",{attrs:{id:"方式一-构造函数传值-类型安全-推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一-构造函数传值-类型安全-推荐"}},[t._v("#")]),t._v(" 方式一：构造函数传值（类型安全，推荐）")]),t._v(" "),s("p",[t._v("这是最直观、最安全的方式。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("传递")]),t._v(": 创建新页面组件实例时，通过"),s("strong",[t._v("构造函数")]),t._v("来完成。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 RouteUtils.push 中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Navigator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MaterialPageRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("builder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 直接把 "webView" 字符串传给 title 参数')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webView"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("接收")]),t._v(": 在目标页面 ("),s("code",[t._v("WebViewPage")]),t._v(") 的 "),s("code",[t._v("StatefulWidget")]),t._v(" 部分用 "),s("code",[t._v("final")]),t._v(" 变量声明，并在 "),s("code",[t._v("State")]),t._v(" 部分通过 "),s("code",[t._v("widget.变量名")]),t._v(" 访问。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatefulWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 声明要接收的参数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" required "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 在构造函数中接收")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _WebViewPageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 通过 widget.title 使用参数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppBar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("widget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"方式二-arguments-传值-灵活-用于命名路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二-arguments-传值-灵活-用于命名路由"}},[t._v("#")]),t._v(" 方式二："),s("code",[t._v("arguments")]),t._v(" 传值（灵活，用于命名路由）")]),t._v(" "),s("p",[t._v("这种方式在与"),s("strong",[t._v("命名路由")]),t._v(" ("),s("code",[t._v("pushNamed")]),t._v(") 结合时非常灵活。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("传递")]),t._v(": 在跳转时，通过 "),s("code",[t._v("arguments")]),t._v(" 参数传递一个对象，通常是 "),s("code",[t._v("Map")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 HomePage 中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RouteUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushForNamed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RoutePaths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("webViewPage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webView"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 Map 作为 arguments 传递")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("接收")]),t._v(": 在目标页面的 "),s("code",[t._v("State")]),t._v(" 内部，通过 "),s("code",[t._v("ModalRoute.of(context)!.settings.arguments")]),t._v(" 来获取。这个过程必须在 "),s("code",[t._v("build")]),t._v(" 方法或者 "),s("code",[t._v("initState")]),t._v(" 中（通常配合 "),s("code",[t._v("addPostFrameCallback")]),t._v("）完成。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _WebViewPageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebViewPage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保在第一帧渲染后执行，此时 context 才可用")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WidgetsBinding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addPostFrameCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mounted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModalRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取到值后，调用 setState 更新界面")]),t._v("\n            name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"默认标题"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... build 方法中使用 name ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"_4-状态管理-state-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-状态管理-state-management"}},[t._v("#")]),t._v(" 4. 状态管理 (State Management)")]),t._v(" "),s("h3",{attrs:{id:"level-1-本地状态-local-state-与-setstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#level-1-本地状态-local-state-与-setstate"}},[t._v("#")]),t._v(" Level 1: 本地状态 (Local State) 与 "),s("code",[t._v("setState")])]),t._v(" "),s("p",[s("code",[t._v("StatefulWidget")]),t._v("（有状态组件）拥有一个 "),s("code",[t._v("State")]),t._v(" 对象，可以保存和改变数据，并在数据改变时"),s("strong",[t._v("刷新界面")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("State 对象")]),t._v(": 专门用来存储组件内部的可变数据。")]),t._v(" "),s("li",[s("strong",[t._v("setState((){ ... })")]),t._v(": 这是刷新UI的"),s("strong",[t._v("唯一指令")]),t._v("。\n"),s("ul",[s("li",[s("strong",[t._v("原理")]),t._v(": 调用 "),s("code",[t._v("setState")]),t._v(" 会通知 Flutter 框架：“这个组件的数据变了，请重新调用它的 "),s("code",[t._v("build")]),t._v(" 方法来重绘界面！”。")]),t._v(" "),s("li",[s("strong",[t._v("注意")]),t._v(": 如果只修改变量而不调用 "),s("code",[t._v("setState")]),t._v("，数据虽然变了，但UI不会刷新。")])])])]),t._v(" "),s("h3",{attrs:{id:"level-2-应用-全局状态-app-state-与-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#level-2-应用-全局状态-app-state-与-provider"}},[t._v("#")]),t._v(" Level 2: 应用/全局状态 (App State) 与 "),s("code",[t._v("Provider")])]),t._v(" "),s("p",[t._v("当多个页面需要共享同一个状态（如用户登录信息、主题色），或者需要将状态传递给很深的子组件时，使用 "),s("code",[t._v("setState")]),t._v(" 会变得非常繁琐（即“状态提升”和“Prop-drilling”）。")]),t._v(" "),s("p",[s("code",[t._v("Provider")]),t._v(" 是 Google 官方推荐的、简单轻量的状态管理方案。")]),t._v(" "),s("h4",{attrs:{id:"核心概念-1-changenotifier-viewmodel-状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心概念-1-changenotifier-viewmodel-状态"}},[t._v("#")]),t._v(" 核心概念 1: "),s("code",[t._v("ChangeNotifier")]),t._v(" (ViewModel / 状态)")]),t._v(" "),s("p",[s("code",[t._v("ChangeNotifier")]),t._v(" 是一个 Flutter SDK 内置的类。我们创建的 "),s("code",[t._v("ViewModel")]),t._v(" (VM) 通常会继承它。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("职责")]),t._v(":\n"),s("ol",[s("li",[s("strong",[t._v("持有数据")]),t._v(": 比如 "),s("code",[t._v("List<Banner> bannerList")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("封装业务逻辑")]),t._v(": 比如 "),s("code",[t._v("getBanner()")]),t._v(" 方法。")]),t._v(" "),s("li",[s("strong",[t._v("通知更新")]),t._v(": 当数据发生变化时（例如网络请求成功后），调用 "),s("code",[t._v("notifyListeners()")]),t._v(" 方法，向所有监听者（Consumer）发送“数据变了”的信号。")])])])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：home_vm.dart")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeViewModel")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChangeNotifier")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Banner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" bannerList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 持有数据")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 封装业务逻辑")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchBanners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApiService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设 ApiService 负责请求")]),t._v("\n    bannerList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把 data 转换成 bannerList")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 通知更新")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyListeners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"核心概念-2-changenotifierprovider-供应器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心概念-2-changenotifierprovider-供应器"}},[t._v("#")]),t._v(" 核心概念 2: "),s("code",[t._v("ChangeNotifierProvider")]),t._v(" (供应器)")]),t._v(" "),s("p",[s("code",[t._v("ChangeNotifierProvider")]),t._v(" 是 "),s("code",[t._v("provider")]),t._v(" 包提供的组件。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("职责")]),t._v(": 向其子组件树"),s("strong",[t._v("提供")]),t._v("一个 "),s("code",[t._v("ChangeNotifier")]),t._v(" (即 VM) 的实例。")]),t._v(" "),s("li",[s("strong",[t._v("位置")]),t._v(": 通常放在需要共享该状态的"),s("strong",[t._v("组件树的顶层")]),t._v("，或者直接放在 "),s("code",[t._v("main.dart")]),t._v(" 的 "),s("code",[t._v("runApp")]),t._v(" 中，使其成为全局可访问。")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：main.dart")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建并提供了 HomeViewModel 的实例")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChangeNotifierProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeViewModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. MyApp 及其所有子组件都能访问到 HomeViewModel")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"核心概念-3-consumer-context-watch-监听器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心概念-3-consumer-context-watch-监听器"}},[t._v("#")]),t._v(" 核心概念 3: "),s("code",[t._v("Consumer")]),t._v(" / "),s("code",[t._v("context.watch")]),t._v(" (监听器)")]),t._v(" "),s("p",[s("code",[t._v("Consumer")]),t._v(" (或 "),s("code",[t._v("context.watch")]),t._v(") 负责从 "),s("code",[t._v("Provider")]),t._v(" 获取 "),s("code",[t._v("ViewModel")]),t._v(" 并"),s("strong",[t._v("监听")]),t._v("其变化。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("Consumer")]),t._v(" (组件方式)")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("是一个 Widget，它会"),s("strong",[t._v("只重建")]),t._v("其 "),s("code",[t._v("builder")]),t._v(" 内部的组件，性能较好。")]),t._v(" "),s("li",[s("code",[t._v("builder")]),t._v(" 提供三个参数："),s("code",[t._v("context")]),t._v("、"),s("code",[t._v("viewModel")]),t._v(" (我们需要的VM实例) 和 "),s("code",[t._v("child")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("context.watch<T>()")]),t._v(" (Hook 方式 - 更常用)")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("在 "),s("code",[t._v("build")]),t._v(" 方法内部调用。")]),t._v(" "),s("li",[t._v("它会告诉 Flutter：“我依赖 "),s("code",[t._v("HomeViewModel")]),t._v("，当它调用 "),s("code",[t._v("notifyListeners()")]),t._v(" 时，请"),s("strong",[t._v("重建整个")]),t._v("调用了 "),s("code",[t._v("watch")]),t._v(" 的 "),s("code",[t._v("build")]),t._v(" 方法”。")])])])]),t._v(" "),s("p",[s("strong",[t._v("代码实践 (解答：“为啥vm就能拿到bannerlist的值”)")])]),t._v(" "),s("p",[s("strong",[t._v("连接流程如下：")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("HomeViewModel")]),t._v(" ("),s("code",[t._v("VM")]),t._v(") 自己负责调用 API 并获取数据，然后将数据存入 "),s("code",[t._v("VM.bannerList")]),t._v(" 变量中。")]),t._v(" "),s("li",[t._v("获取数据后，"),s("code",[t._v("VM")]),t._v(" 调用 "),s("code",[t._v("notifyListeners()")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("ChangeNotifierProvider")]),t._v(" 在 "),s("code",[t._v("main.dart")]),t._v(" 中创建了这个 "),s("code",[t._v("VM")]),t._v(" 实例。")]),t._v(" "),s("li",[s("code",[t._v("Consumer")]),t._v(" (或 "),s("code",[t._v("context.watch")]),t._v(") 在 "),s("code",[t._v("HomePage")]),t._v(" 中监听这个 "),s("code",[t._v("VM")]),t._v("。")]),t._v(" "),s("li",[t._v("当 "),s("code",[t._v("Consumer")]),t._v(" 收到 "),s("code",[t._v("notifyListeners()")]),t._v(" 信号时，它会"),s("strong",[t._v("自动重建")]),t._v("，并访问 "),s("code",[t._v("VM")]),t._v(" 实例上"),s("strong",[t._v("已经更新好")]),t._v("的 "),s("code",[t._v("bannerList")]),t._v(" 数据，从而刷新UI。")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 示例：home_page.dart")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _HomePageState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次加载时，获取 VM 实例并调用其方法")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 context.read 不会监听变化，适合在 initState 或 onTap 中调用方法")]),t._v("\n    context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeViewModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchBanners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 使用 watch 来监听 HomeViewModel 的变化")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("watch"),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HomeViewModel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scaffold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ListView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. vm 上的 bannerList 已经是最新的了")]),t._v("\n        itemCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bannerList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        itemBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 使用数据渲染UI")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bannerList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[s("code",[t._v("context.read<T>()")])]),t._v(": 仅"),s("strong",[t._v("读取")]),t._v("一次 "),s("code",[t._v("VM")]),t._v(" 实例，"),s("strong",[t._v("不")]),t._v("监听后续变化。适合在 "),s("code",[t._v("initState")]),t._v(" 或 "),s("code",[t._v("onPressed")]),t._v(" 中调用 "),s("code",[t._v("VM")]),t._v(" 的方法。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("context.watch<T>()()")])]),t._v(": "),s("strong",[t._v("读取")]),t._v("并"),s("strong",[t._v("持续监听")]),t._v(" "),s("code",[t._v("VM")]),t._v(" 的变化。适合在 "),s("code",[t._v("build")]),t._v(" 方法中获取数据以渲染UI。")])]),t._v(" "),s("h2",{attrs:{id:"_5-异步编程-async"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-异步编程-async"}},[t._v("#")]),t._v(" 5. 异步编程 (Async)")]),t._v(" "),s("p",[t._v("网络请求等耗时操作不能阻塞UI线程。Dart 使用 "),s("code",[t._v("Future")]),t._v(" 来处理这类"),s("strong",[t._v("异步操作")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"future、async-和-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#future、async-和-await"}},[t._v("#")]),t._v(" "),s("code",[t._v("Future")]),t._v("、"),s("code",[t._v("async")]),t._v(" 和 "),s("code",[t._v("await")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Future")]),t._v(": 一个“未来的凭证”或“快递单”。调用异步函数时，它不会立即给你结果，而是先给你一个 "),s("code",[t._v("Future")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("async")]),t._v(": 用来标记一个函数是"),s("strong",[t._v("异步函数")]),t._v("，这个函数会自动返回一个 "),s("code",[t._v("Future")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("await")]),t._v(": 只能用在 "),s("code",[t._v("async")]),t._v(" 函数内部，意思是“"),s("strong",[t._v("在这里暂停，一直等到这个 "),s("code",[t._v("Future")]),t._v(" 有结果了，再继续往下执行")]),t._v("”。")])]),t._v(" "),s("p",[s("strong",[t._v("代码实践 (home_vm.dart):")])]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'async' 标记这是一个异步函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dio")]),t._v(" dio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dio")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'await' 在这里暂停，直到 dio.get() 这个 Future 完成")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Response")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" dio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/banner/json"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Future 完成后，才会执行下面的 print 和 return")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"response===>')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_6-dart-进阶与包管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-dart-进阶与包管理"}},[t._v("#")]),t._v(" 6. Dart 进阶与包管理")]),t._v(" "),s("h3",{attrs:{id:"static-静态成员详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-静态成员详解"}},[t._v("#")]),t._v(" "),s("code",[t._v("static")]),t._v(" 静态成员详解")]),t._v(" "),s("p",[s("code",[t._v("static")]),t._v(" 关键字修饰的成员（变量或方法）"),s("strong",[t._v("属于类本身，而不是类的某个具体实例（对象）")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("非静态成员 (实例成员)")]),t._v(": 像“房子的家具”，必须先创建实例（盖房子）才能访问。")]),t._v(" "),s("li",[s("strong",[t._v("静态成员 (static)")]),t._v(": 像“建筑图纸上的规范”，不需要创建实例，直接通过"),s("strong",[t._v("类名")]),t._v("访问。")]),t._v(" "),s("li",[s("strong",[t._v("用法")]),t._v(": "),s("code",[t._v("RoutePaths.home")]),t._v(", "),s("code",[t._v("HomeViewModel.getBanner()")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"var-类型推断-vs-dio-显式类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var-类型推断-vs-dio-显式类型"}},[t._v("#")]),t._v(" "),s("code",[t._v("var")]),t._v(" (类型推断) vs. "),s("code",[t._v("Dio")]),t._v(" (显式类型)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("var")]),t._v(": "),s("code",[t._v("var dio = Dio();")]),t._v("。Dart 编译器自动推断 "),s("code",[t._v("dio")]),t._v(" 的类型是 "),s("code",[t._v("Dio")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("Dio")]),t._v(": "),s("code",[t._v("Dio dio = Dio();")]),t._v("。明确地告诉编译器 "),s("code",[t._v("dio")]),t._v(" 变量的类型"),s("strong",[t._v("必须是")]),t._v(" "),s("code",[t._v("Dio")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("推荐")]),t._v(": 在团队协作中，显式类型 ("),s("code",[t._v("Dio dio")]),t._v(") 可读性更强、意图更明确。")])]),t._v(" "),s("h3",{attrs:{id:"包管理-pub-dev"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包管理-pub-dev"}},[t._v("#")]),t._v(" 包管理 ("),s("code",[t._v("pub.dev")]),t._v(")")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("pub.dev")]),t._v(": Dart 和 Flutter 官方的包（Package）仓库，类似组件的应用商店。")]),t._v(" "),s("li",[s("strong",[t._v("pubspec.yaml")]),t._v(": 项目的“依赖清单”。")]),t._v(" "),s("li",[s("strong",[t._v("flutter pub get")]),t._v(":\n"),s("ol",[s("li",[t._v("读取 "),s("code",[t._v("pubspec.yaml")]),t._v("。")]),t._v(" "),s("li",[t._v("去 "),s("code",[t._v("pub.dev")]),t._v(" 下载包的源代码（.dart 文件）。")]),t._v(" "),s("li",[t._v("存储在本地缓存中。")]),t._v(" "),s("li",[t._v("在 "),s("code",[t._v(".dart_tool/package_config.json")]),t._v(" 中创建映射（地址簿），告诉 "),s("code",[t._v("import")]),t._v(" 语句去哪里找文件。")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);